{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e02","webpack:///./src/components/Canvas.vue?e8ec","webpack:///./src/components/Screen.vue?191a","webpack:///./src/App.vue?da66","webpack:///./src/components/Canvas.vue?2a2e","webpack:///./src/bresenham.js","webpack:///./src/framebuffer.js","webpack:///./src/numbers.js","webpack:///./src/units.js","webpack:///src/components/Canvas.vue","webpack:///./src/components/Canvas.vue?5d92","webpack:///./src/components/Canvas.vue?c3a6","webpack:///./src/components/Screen.vue?f9f7","webpack:///src/components/Screen.vue","webpack:///./src/components/Screen.vue?7f61","webpack:///./src/components/Screen.vue?25b2","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue?bff9","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","isWideScreen","directives","rawName","expression","domProps","Array","isArray","_i","on","$event","$$a","$$el","target","$$c","checked","$$v","$$i","concat","_v","staticRenderFns","ref","assert","a","console","log","plotLine","x0","y0","x1","y1","e2","dx","Math","abs","sx","dy","sy","err","setPixel","plotEllipse","xm","ym","b","x","y","plotCircle","plotEllipseRect","b1","plotQuadBezierSeg","x2","y2","xy","xx","yy","cur","plotQuadBezier","floor","plotQuadRationalBezierSeg","w","sqrt","plotQuadRationalBezier","ww","q","plotRotatedEllipse","angle","xd","yd","sin","zd","plotRotatedEllipseRect","cos","plotCubicBezierSeg","x3","y3","f","fx","fy","ab","ac","bc","cb","ex","pxy","leg","xc","xa","xb","yc","ya","yb","EP","exit","plotCubicBezier","fx1","fx2","fx3","fy1","fy2","fy3","t2","fx0","fy0","t1","plotLineAA","ed","setPixelAA","plotCircleAA","plotEllipseRectAA","min","max","plotQuadBezierSegAA","plotQuadBezierAA","plotQuadRationalBezierSegAA","plotQuadRationalBezierAA","plotRotatedEllipseAA","plotRotatedEllipseRectAA","plotCubicBezierSegAA","ba","px","py","ip","loop","plotCubicBezierAA","plotLineWidth","th","round","plotEllipseRectWidth","dx2","dy2","a2","b2","plotQuadRationalBezierWidthSeg","fsqrt","fail","plotQuadRationalBezierWidth","plotRotatedEllipseWidth","plotRotatedEllipseRectWidth","plotCubicBezierWidth","plotCubicBezierSegWidth","canvasContext","imageData","width","height","zoom","subpixel","alpha","init","canvasElement","getContext","begin","getImageData","clear","fill","end","putImageData","bresenham","drawNumber","number","size","left","right","top","bottom","framebuffer","degreeCelcuis","kilometersPerHour","mounted","$refs","canvas","draw","methods","numbers","units","component","class","_t","props","type","Boolean","default","components","Canvas","Screen","Vue","config","productionTip","render","h","App","$mount"],"mappings":"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","file":"js/app.3811bd06.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/drawn-numbers/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Canvas.vue?vue&type=style&index=0&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Screen.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('Screen',{attrs:{\"is-wide-screen\":_vm.isWideScreen}},[_c('Canvas')],1),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.isWideScreen),expression:\"isWideScreen\"}],attrs:{\"type\":\"checkbox\",\"name\":\"isWideScreen\"},domProps:{\"checked\":Array.isArray(_vm.isWideScreen)?_vm._i(_vm.isWideScreen,null)>-1:(_vm.isWideScreen)},on:{\"change\":function($event){var $$a=_vm.isWideScreen,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.isWideScreen=$$a.concat([$$v]))}else{$$i>-1&&(_vm.isWideScreen=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.isWideScreen=$$c}}}}),_c('label',{attrs:{\"for\":\"isWideScreen\"}},[_vm._v(\"Wide screen\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('canvas',{ref:\"canvas\",attrs:{\"width\":\"960\",\"height\":\"720\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* eslint-disable */\r\n/**\r\n * Bresenham Curve Rasterizing Algorithms\r\n * @author  Zingl Alois\r\n * @date    17.12.2014\r\n * @version 1.3\r\n * @url     http://members.chello.at/easyfilter/bresenham.html\r\n*/\r\n\r\nfunction assert(a) {\r\n   if (!a) console.log(\"Assertion failed in bresenham.js \"+a);\r\n   return a;\r\n}\r\n   \r\nfunction plotLine(x0, y0, x1, y1)\r\n{\r\n   var dx =  Math.abs(x1-x0), sx = x0<x1 ? 1 : -1;\r\n   var dy = -Math.abs(y1-y0), sy = y0<y1 ? 1 : -1;\r\n   var err = dx+dy, e2;                                   /* error value e_xy */\r\n\r\n   for (;;){                                                          /* loop */\r\n      setPixel(x0,y0);\r\n      if (x0 == x1 && y0 == y1) break;\r\n      e2 = 2*err;\r\n      if (e2 >= dy) { err += dy; x0 += sx; }                        /* x step */\r\n      if (e2 <= dx) { err += dx; y0 += sy; }                        /* y step */\r\n   }\r\n}\r\n\r\nfunction plotEllipse(xm, ym, a, b)\r\n{\r\n   var x = -a, y = 0;           /* II. quadrant from bottom left to top right */\r\n   var e2, dx = (1+2*x)*b*b;                              /* error increment  */\r\n   var dy = x*x, err = dx+dy;                              /* error of 1.step */\r\n\r\n   do {\r\n       setPixel(xm-x, ym+y);                                 /*   I. Quadrant */\r\n       setPixel(xm+x, ym+y);                                 /*  II. Quadrant */\r\n       setPixel(xm+x, ym-y);                                 /* III. Quadrant */\r\n       setPixel(xm-x, ym-y);                                 /*  IV. Quadrant */\r\n       e2 = 2*err;                                        \r\n       if (e2 >= dx) { x++; err += dx += 2*b*b; }                   /* x step */\r\n       if (e2 <= dy) { y++; err += dy += 2*a*a; }                   /* y step */\r\n   } while (x <= 0);\r\n\r\n   while (y++ < b) {            /* too early stop for flat ellipses with a=1, */\r\n       setPixel(xm, ym+y);                        /* -> finish tip of ellipse */\r\n       setPixel(xm, ym-y);\r\n   }\r\n}\r\n\r\nfunction plotCircle(xm, ym, r)\r\n{\r\n   var x = -r, y = 0, err = 2-2*r;                /* bottom left to top right */\r\n   do {\r\n      setPixel(xm-x, ym+y);                            /*   I. Quadrant +x +y */\r\n      setPixel(xm-y, ym-x);                            /*  II. Quadrant -x +y */\r\n      setPixel(xm+x, ym-y);                            /* III. Quadrant -x -y */\r\n      setPixel(xm+y, ym+x);                            /*  IV. Quadrant +x -y */\r\n      r = err;                                       \r\n      if (r <= y) err += ++y*2+1;                                   /* y step */\r\n      if (r > x || err > y) err += ++x*2+1;                         /* x step */\r\n   } while (x < 0);\r\n}\r\n\r\nfunction plotEllipseRect(x0, y0, x1, y1)\r\n{                              /* rectangular parameter enclosing the ellipse */\r\n   var a = Math.abs(x1-x0), b = Math.abs(y1-y0), b1 = b&1;        /* diameter */\r\n   var dx = 4*(1.0-a)*b*b, dy = 4*(b1+1)*a*a;              /* error increment */\r\n   var err = dx+dy+b1*a*a, e2;                             /* error of 1.step */\r\n\r\n   if (x0 > x1) { x0 = x1; x1 += a; }        /* if called with swapped points */\r\n   if (y0 > y1) y0 = y1;                                  /* .. exchange them */\r\n   y0 += (b+1)>>1; y1 = y0-b1;                              /* starting pixel */\r\n   a = 8*a*a; b1 = 8*b*b;                               \r\n                                                        \r\n   do {                                                 \r\n      setPixel(x1, y0);                                      /*   I. Quadrant */\r\n      setPixel(x0, y0);                                      /*  II. Quadrant */\r\n      setPixel(x0, y1);                                      /* III. Quadrant */\r\n      setPixel(x1, y1);                                      /*  IV. Quadrant */\r\n      e2 = 2*err;\r\n      if (e2 <= dy) { y0++; y1--; err += dy += a; }                 /* y step */\r\n      if (e2 >= dx || 2*err > dy) { x0++; x1--; err += dx += b1; }       /* x */\r\n   } while (x0 <= x1);\r\n\r\n   while (y0-y1 <= b) {                /* too early stop of flat ellipses a=1 */\r\n      setPixel(x0-1, y0);                         /* -> finish tip of ellipse */\r\n      setPixel(x1+1, y0++);\r\n      setPixel(x0-1, y1);\r\n      setPixel(x1+1, y1--);\r\n   }\r\n}\r\n\r\nfunction plotQuadBezierSeg(x0, y0, x1, y1, x2, y2)\r\n{                                  /* plot a limited quadratic Bezier segment */\r\n  var sx = x2-x1, sy = y2-y1;\r\n  var xx = x0-x1, yy = y0-y1, xy;               /* relative values for checks */\r\n  var dx, dy, err, cur = xx*sy-yy*sx;                            /* curvature */\r\n\r\n  assert(xx*sx <= 0 && yy*sy <= 0);       /* sign of gradient must not change */\r\n\r\n  if (sx*sx+sy*sy > xx*xx+yy*yy) {                 /* begin with shorter part */\r\n    x2 = x0; x0 = sx+x1; y2 = y0; y0 = sy+y1; cur = -cur;       /* swap P0 P2 */\r\n  }\r\n  if (cur != 0) {                                         /* no straight line */\r\n    xx += sx; xx *= sx = x0 < x2 ? 1 : -1;                /* x step direction */\r\n    yy += sy; yy *= sy = y0 < y2 ? 1 : -1;                /* y step direction */\r\n    xy = 2*xx*yy; xx *= xx; yy *= yy;               /* differences 2nd degree */\r\n    if (cur*sx*sy < 0) {                                /* negated curvature? */\r\n      xx = -xx; yy = -yy; xy = -xy; cur = -cur;\r\n    }\r\n    dx = 4.0*sy*cur*(x1-x0)+xx-xy;                  /* differences 1st degree */\r\n    dy = 4.0*sx*cur*(y0-y1)+yy-xy;\r\n    xx += xx; yy += yy; err = dx+dy+xy;                     /* error 1st step */\r\n    do {\r\n      setPixel(x0,y0);                                          /* plot curve */\r\n      if (x0 == x2 && y0 == y2) return;       /* last pixel -> curve finished */\r\n      y1 = 2*err < dx;                       /* save value for test of y step */\r\n      if (2*err > dy) { x0 += sx; dx -= xy; err += dy += yy; }      /* x step */\r\n      if (    y1    ) { y0 += sy; dy -= xy; err += dx += xx; }      /* y step */\r\n    } while (dy < 0 && dx > 0);        /* gradient negates -> algorithm fails */\r\n  }\r\n  plotLine(x0,y0, x2,y2);                       /* plot remaining part to end */\r\n}\r\n\r\nfunction plotQuadBezier(x0, y0, x1, y1, x2, y2)\r\n{                                          /* plot any quadratic Bezier curve */\r\n   var x = x0-x1, y = y0-y1, t = x0-2*x1+x2, r;\r\n\r\n   if (x*(x2-x1) > 0) {                              /* horizontal cut at P4? */\r\n      if (y*(y2-y1) > 0)                           /* vertical cut at P6 too? */\r\n         if (Math.abs((y0-2*y1+y2)/t*x) > Math.abs(y)) {      /* which first? */\r\n            x0 = x2; x2 = x+x1; y0 = y2; y2 = y+y1;            /* swap points */\r\n         }                            /* now horizontal cut at P4 comes first */\r\n      t = (x0-x1)/t;\r\n      r = (1-t)*((1-t)*y0+2.0*t*y1)+t*t*y2;                       /* By(t=P4) */\r\n      t = (x0*x2-x1*x1)*t/(x0-x1);                       /* gradient dP4/dx=0 */\r\n      x = Math.floor(t+0.5); y = Math.floor(r+0.5);\r\n      r = (y1-y0)*(t-x0)/(x1-x0)+y0;                  /* intersect P3 | P0 P1 */\r\n      plotQuadBezierSeg(x0,y0, x,Math.floor(r+0.5), x,y);\r\n      r = (y1-y2)*(t-x2)/(x1-x2)+y2;                  /* intersect P4 | P1 P2 */\r\n      x0 = x1 = x; y0 = y; y1 = Math.floor(r+0.5);        /* P0 = P4, P1 = P8 */\r\n   }\r\n   if ((y0-y1)*(y2-y1) > 0) {                          /* vertical cut at P6? */\r\n      t = y0-2*y1+y2; t = (y0-y1)/t;\r\n      r = (1-t)*((1-t)*x0+2.0*t*x1)+t*t*x2;                       /* Bx(t=P6) */\r\n      t = (y0*y2-y1*y1)*t/(y0-y1);                       /* gradient dP6/dy=0 */\r\n      x = Math.floor(r+0.5); y = Math.floor(t+0.5);\r\n      r = (x1-x0)*(t-y0)/(y1-y0)+x0;                  /* intersect P6 | P0 P1 */\r\n      plotQuadBezierSeg(x0,y0, Math.floor(r+0.5),y, x,y);\r\n      r = (x1-x2)*(t-y2)/(y1-y2)+x2;                  /* intersect P7 | P1 P2 */\r\n      x0 = x; x1 = Math.floor(r+0.5); y0 = y1 = y;        /* P0 = P6, P1 = P7 */\r\n   }\r\n   plotQuadBezierSeg(x0,y0, x1,y1, x2,y2);                  /* remaining part */\r\n}\r\n\r\nfunction plotQuadRationalBezierSeg(x0, y0, x1, y1, x2, y2, w)\r\n{                   /* plot a limited rational Bezier segment, squared weight */\r\n  var sx = x2-x1, sy = y2-y1;                   /* relative values for checks */\r\n  var dx = x0-x2, dy = y0-y2, xx = x0-x1, yy = y0-y1;\r\n  var xy = xx*sy+yy*sx, cur = xx*sy-yy*sx, err;                  /* curvature */\r\n\r\n  assert(xx*sx <= 0.0 && yy*sy <= 0.0);   /* sign of gradient must not change */\r\n\r\n  if (cur != 0.0 && w > 0.0) {                            /* no straight line */\r\n    if (sx*sx+sy*sy > xx*xx+yy*yy) {               /* begin with shorter part */\r\n      x2 = x0; x0 -= dx; y2 = y0; y0 -= dy; cur = -cur;         /* swap P0 P2 */\r\n    }\r\n    xx = 2.0*(4.0*w*sx*xx+dx*dx);                   /* differences 2nd degree */\r\n    yy = 2.0*(4.0*w*sy*yy+dy*dy);\r\n    sx = x0 < x2 ? 1 : -1;                                /* x step direction */\r\n    sy = y0 < y2 ? 1 : -1;                                /* y step direction */\r\n    xy = -2.0*sx*sy*(2.0*w*xy+dx*dy);\r\n\r\n    if (cur*sx*sy < 0.0) {                              /* negated curvature? */\r\n      xx = -xx; yy = -yy; xy = -xy; cur = -cur;\r\n    }\r\n    dx = 4.0*w*(x1-x0)*sy*cur+xx/2.0+xy;            /* differences 1st degree */\r\n    dy = 4.0*w*(y0-y1)*sx*cur+yy/2.0+xy;\r\n\r\n    if (w < 0.5 && (dy > xy || dx < xy)) {   /* flat ellipse, algorithm fails */\r\n       cur = (w+1.0)/2.0; w = Math.sqrt(w); xy = 1.0/(w+1.0);\r\n       sx = Math.floor((x0+2.0*w*x1+x2)*xy/2.0+0.5);/*subdivide curve in half */\r\n       sy = Math.floor((y0+2.0*w*y1+y2)*xy/2.0+0.5);\r\n       dx = Math.floor((w*x1+x0)*xy+0.5); dy = Math.floor((y1*w+y0)*xy+0.5);\r\n       plotQuadRationalBezierSeg(x0,y0, dx,dy, sx,sy, cur);/* plot separately */\r\n       dx = Math.floor((w*x1+x2)*xy+0.5); dy = Math.floor((y1*w+y2)*xy+0.5);\r\n       plotQuadRationalBezierSeg(sx,sy, dx,dy, x2,y2, cur);\r\n       return;\r\n    }\r\n    err = dx+dy-xy;                                           /* error 1.step */\r\n    do {\r\n      setPixel(x0,y0);                                          /* plot curve */\r\n      if (x0 == x2 && y0 == y2) return;       /* last pixel -> curve finished */\r\n      x1 = 2*err > dy; y1 = 2*(err+yy) < -dy;/* save value for test of x step */\r\n      if (2*err < dx || y1) { y0 += sy; dy += xy; err += dx += xx; }/* y step */\r\n      if (2*err > dx || x1) { x0 += sx; dx += xy; err += dy += yy; }/* x step */\r\n    } while (dy <= xy && dx >= xy);    /* gradient negates -> algorithm fails */\r\n  }\r\n  plotLine(x0,y0, x2,y2);                     /* plot remaining needle to end */\r\n}\r\n\r\nfunction plotQuadRationalBezier(x0, y0, x1, y1, x2, y2, w)\r\n{                                 /* plot any quadratic rational Bezier curve */\r\n   var x = x0-2*x1+x2, y = y0-2*y1+y2;\r\n   var xx = x0-x1, yy = y0-y1, ww, t, q;\r\n\r\n   assert(w >= 0.0);\r\n\r\n   if (xx*(x2-x1) > 0) {                             /* horizontal cut at P4? */\r\n      if (yy*(y2-y1) > 0)                          /* vertical cut at P6 too? */\r\n         if (Math.abs(xx*y) > Math.abs(yy*x)) {               /* which first? */\r\n            x0 = x2; x2 = xx+x1; y0 = y2; y2 = yy+y1;          /* swap points */\r\n         }                            /* now horizontal cut at P4 comes first */\r\n      if (x0 == x2 || w == 1.0) t = (x0-x1)/x;\r\n      else {                                 /* non-rational or rational case */\r\n         q = Math.sqrt(4.0*w*w*(x0-x1)*(x2-x1)+(x2-x0)*(x2-x0));\r\n         if (x1 < x0) q = -q;\r\n         t = (2.0*w*(x0-x1)-x0+x2+q)/(2.0*(1.0-w)*(x2-x0));        /* t at P4 */\r\n      }\r\n      q = 1.0/(2.0*t*(1.0-t)*(w-1.0)+1.0);                 /* sub-divide at t */\r\n      xx = (t*t*(x0-2.0*w*x1+x2)+2.0*t*(w*x1-x0)+x0)*q;               /* = P4 */\r\n      yy = (t*t*(y0-2.0*w*y1+y2)+2.0*t*(w*y1-y0)+y0)*q;\r\n      ww = t*(w-1.0)+1.0; ww *= ww*q;                    /* squared weight P3 */\r\n      w = ((1.0-t)*(w-1.0)+1.0)*Math.sqrt(q);                    /* weight P8 */\r\n      x = Math.floor(xx+0.5); y = Math.floor(yy+0.5);                   /* P4 */\r\n      yy = (xx-x0)*(y1-y0)/(x1-x0)+y0;                /* intersect P3 | P0 P1 */\r\n      plotQuadRationalBezierSeg(x0,y0, x,Math.floor(yy+0.5), x,y, ww);\r\n      yy = (xx-x2)*(y1-y2)/(x1-x2)+y2;                /* intersect P4 | P1 P2 */\r\n      y1 = Math.floor(yy+0.5); x0 = x1 = x; y0 = y;       /* P0 = P4, P1 = P8 */\r\n   }\r\n   if ((y0-y1)*(y2-y1) > 0) {                          /* vertical cut at P6? */\r\n      if (y0 == y2 || w == 1.0) t = (y0-y1)/(y0-2.0*y1+y2);\r\n      else {                                 /* non-rational or rational case */\r\n         q = Math.sqrt(4.0*w*w*(y0-y1)*(y2-y1)+(y2-y0)*(y2-y0));\r\n         if (y1 < y0) q = -q;\r\n         t = (2.0*w*(y0-y1)-y0+y2+q)/(2.0*(1.0-w)*(y2-y0));        /* t at P6 */\r\n      }\r\n      q = 1.0/(2.0*t*(1.0-t)*(w-1.0)+1.0);                 /* sub-divide at t */\r\n      xx = (t*t*(x0-2.0*w*x1+x2)+2.0*t*(w*x1-x0)+x0)*q;               /* = P6 */\r\n      yy = (t*t*(y0-2.0*w*y1+y2)+2.0*t*(w*y1-y0)+y0)*q;\r\n      ww = t*(w-1.0)+1.0; ww *= ww*q;                    /* squared weight P5 */\r\n      w = ((1.0-t)*(w-1.0)+1.0)*Math.sqrt(q);                    /* weight P7 */\r\n      x = Math.floor(xx+0.5); y = Math.floor(yy+0.5);           /* P6 */\r\n      xx = (x1-x0)*(yy-y0)/(y1-y0)+x0;                /* intersect P6 | P0 P1 */\r\n      plotQuadRationalBezierSeg(x0,y0, Math.floor(xx+0.5),y, x,y, ww);\r\n      xx = (x1-x2)*(yy-y2)/(y1-y2)+x2;                /* intersect P7 | P1 P2 */\r\n      x1 = Math.floor(xx+0.5); x0 = x; y0 = y1 = y;       /* P0 = P6, P1 = P7 */\r\n   }\r\n   plotQuadRationalBezierSeg(x0,y0, x1,y1, x2,y2, w*w);          /* remaining */\r\n}\r\n\r\nfunction plotRotatedEllipse(x, y, a, b, angle)\r\n{                                   /* plot ellipse rotated by angle (radian) */\r\n   var xd = a*a, yd = b*b;\r\n   var s = Math.sin(angle), zd = (xd-yd)*s;               /* ellipse rotation */\r\n   xd = Math.sqrt(xd-zd*s), yd = Math.sqrt(yd+zd*s);      /* surrounding rect */\r\n   a = Math.floor(xd+0.5); b = Math.floor(yd+0.5); zd = zd*a*b/(xd*yd);  \r\n   plotRotatedEllipseRect(x-a,y-b, x+a,y+b, (4*zd*Math.cos(angle)));\r\n}\r\n\r\nfunction plotRotatedEllipseRect(x0, y0, x1, y1, zd)\r\n{                  /* rectangle enclosing the ellipse, integer rotation angle */\r\n   var xd = x1-x0, yd = y1-y0, w = xd*yd;\r\n   if (zd == 0) return plotEllipseRect(x0,y0, x1,y1);          /* looks nicer */\r\n   if (w != 0.0) w = (w-zd)/(w+w);                    /* squared weight of P1 */\r\n   assert(w <= 1.0 && w >= 0.0);                /* limit angle to |zd|<=xd*yd */\r\n   xd = Math.floor(xd*w+0.5); yd = Math.floor(yd*w+0.5);       /* snap to int */\r\n   plotQuadRationalBezierSeg(x0,y0+yd, x0,y0, x0+xd,y0, 1.0-w);\r\n   plotQuadRationalBezierSeg(x0,y0+yd, x0,y1, x1-xd,y1, w);\r\n   plotQuadRationalBezierSeg(x1,y1-yd, x1,y1, x1-xd,y1, 1.0-w);\r\n   plotQuadRationalBezierSeg(x1,y1-yd, x1,y0, x0+xd,y0, w);\r\n}\r\n\r\nfunction plotCubicBezierSeg(x0, y0, x1, y1, x2, y2, x3, y3)\r\n{                                        /* plot limited cubic Bezier segment */\r\n   var f, fx, fy, leg = 1;\r\n   var sx = x0 < x3 ? 1 : -1, sy = y0 < y3 ? 1 : -1;        /* step direction */\r\n   var xc = -Math.abs(x0+x1-x2-x3), xa = xc-4*sx*(x1-x2), xb = sx*(x0-x1-x2+x3);\r\n   var yc = -Math.abs(y0+y1-y2-y3), ya = yc-4*sy*(y1-y2), yb = sy*(y0-y1-y2+y3);\r\n   var ab, ac, bc, cb, xx, xy, yy, dx, dy, ex, pxy, EP = 0.01;\r\n                                                 /* check for curve restrains */\r\n   /* slope P0-P1 == P2-P3    and  (P0-P3 == P1-P2      or  no slope change)  */\r\n   assert((x1-x0)*(x2-x3) < EP && ((x3-x0)*(x1-x2) < EP || xb*xb < xa*xc+EP));\r\n   assert((y1-y0)*(y2-y3) < EP && ((y3-y0)*(y1-y2) < EP || yb*yb < ya*yc+EP));\r\n\r\n   if (xa == 0 && ya == 0)                                /* quadratic Bezier */\r\n      return plotQuadBezierSeg(x0,y0, (3*x1-x0)>>1,(3*y1-y0)>>1, x3,y3);\r\n   x1 = (x1-x0)*(x1-x0)+(y1-y0)*(y1-y0)+1;                    /* line lengths */\r\n   x2 = (x2-x3)*(x2-x3)+(y2-y3)*(y2-y3)+1;\r\n\r\n   do {                                                /* loop over both ends */\r\n      ab = xa*yb-xb*ya; ac = xa*yc-xc*ya; bc = xb*yc-xc*yb;\r\n      ex = ab*(ab+ac-3*bc)+ac*ac;       /* P0 part of self-intersection loop? */\r\n      f = ex > 0 ? 1 : Math.floor(Math.sqrt(1+1024/x1));   /* calc resolution */\r\n      ab *= f; ac *= f; bc *= f; ex *= f*f;            /* increase resolution */\r\n      xy = 9*(ab+ac+bc)/8; cb = 8*(xa-ya);  /* init differences of 1st degree */\r\n      dx = 27*(8*ab*(yb*yb-ya*yc)+ex*(ya+2*yb+yc))/64-ya*ya*(xy-ya);\r\n      dy = 27*(8*ab*(xb*xb-xa*xc)-ex*(xa+2*xb+xc))/64-xa*xa*(xy+xa);\r\n                                            /* init differences of 2nd degree */\r\n      xx = 3*(3*ab*(3*yb*yb-ya*ya-2*ya*yc)-ya*(3*ac*(ya+yb)+ya*cb))/4;\r\n      yy = 3*(3*ab*(3*xb*xb-xa*xa-2*xa*xc)-xa*(3*ac*(xa+xb)+xa*cb))/4;\r\n      xy = xa*ya*(6*ab+6*ac-3*bc+cb); ac = ya*ya; cb = xa*xa;\r\n      xy = 3*(xy+9*f*(cb*yb*yc-xb*xc*ac)-18*xb*yb*ab)/8;\r\n\r\n      if (ex < 0) {         /* negate values if inside self-intersection loop */\r\n         dx = -dx; dy = -dy; xx = -xx; yy = -yy; xy = -xy; ac = -ac; cb = -cb;\r\n      }                                     /* init differences of 3rd degree */\r\n      ab = 6*ya*ac; ac = -6*xa*ac; bc = 6*ya*cb; cb = -6*xa*cb;\r\n      dx += xy; ex = dx+dy; dy += xy;                    /* error of 1st step */\r\nexit: \r\n      for (pxy = 0, fx = fy = f; x0 != x3 && y0 != y3; ) {\r\n         setPixel(x0,y0);                                       /* plot curve */\r\n         do {                                  /* move sub-steps of one pixel */\r\n            if (pxy == 0) if (dx > xy || dy < xy) break exit;    /* confusing */\r\n            if (pxy == 1) if (dx > 0 || dy < 0) break exit;         /* values */\r\n            y1 = 2*ex-dy;                    /* save value for test of y step */\r\n            if (2*ex >= dx) {                                   /* x sub-step */\r\n               fx--; ex += dx += xx; dy += xy += ac; yy += bc; xx += ab;\r\n            } else if (y1 > 0) break exit;\r\n            if (y1 <= 0) {                                      /* y sub-step */\r\n               fy--; ex += dy += yy; dx += xy += bc; xx += ac; yy += cb;\r\n            }\r\n         } while (fx > 0 && fy > 0);                       /* pixel complete? */\r\n         if (2*fx <= f) { x0 += sx; fx += f; }                      /* x step */\r\n         if (2*fy <= f) { y0 += sy; fy += f; }                      /* y step */\r\n         if (pxy == 0 && dx < 0 && dy > 0) pxy = 1;      /* pixel ahead valid */\r\n      }\r\n      xx = x0; x0 = x3; x3 = xx; sx = -sx; xb = -xb;             /* swap legs */\r\n      yy = y0; y0 = y3; y3 = yy; sy = -sy; yb = -yb; x1 = x2;\r\n   } while (leg--);                                          /* try other end */\r\n   plotLine(x0,y0, x3,y3);       /* remaining part in case of cusp or crunode */\r\n}\r\n\r\nfunction plotCubicBezier(x0, y0, x1, y1, x2, y2, x3, y3)\r\n{                                              /* plot any cubic Bezier curve */\r\n   var n = 0, i = 0;\r\n   var xc = x0+x1-x2-x3, xa = xc-4*(x1-x2);\r\n   var xb = x0-x1-x2+x3, xd = xb+4*(x1+x2);\r\n   var yc = y0+y1-y2-y3, ya = yc-4*(y1-y2);\r\n   var yb = y0-y1-y2+y3, yd = yb+4*(y1+y2);\r\n   var fx0 = x0, fx1, fx2, fx3, fy0 = y0, fy1, fy2, fy3;\r\n   var t1 = xb*xb-xa*xc, t2, t = new Array(5);\r\n                                 /* sub-divide curve at gradient sign changes */\r\n   if (xa == 0) {                                               /* horizontal */\r\n      if (Math.abs(xc) < 2*Math.abs(xb)) t[n++] = xc/(2.0*xb);  /* one change */\r\n   } else if (t1 > 0.0) {                                      /* two changes */\r\n      t2 = Math.sqrt(t1);\r\n      t1 = (xb-t2)/xa; if (Math.abs(t1) < 1.0) t[n++] = t1;\r\n      t1 = (xb+t2)/xa; if (Math.abs(t1) < 1.0) t[n++] = t1;\r\n   }\r\n   t1 = yb*yb-ya*yc;\r\n   if (ya == 0) {                                                 /* vertical */\r\n      if (Math.abs(yc) < 2*Math.abs(yb)) t[n++] = yc/(2.0*yb);  /* one change */\r\n   } else if (t1 > 0.0) {                                      /* two changes */\r\n      t2 = Math.sqrt(t1);\r\n      t1 = (yb-t2)/ya; if (Math.abs(t1) < 1.0) t[n++] = t1;\r\n      t1 = (yb+t2)/ya; if (Math.abs(t1) < 1.0) t[n++] = t1;\r\n   }\r\n   for (i = 1; i < n; i++)                         /* bubble sort of 4 points */\r\n      if ((t1 = t[i-1]) > t[i]) { t[i-1] = t[i]; t[i] = t1; i = 0; }\r\n\r\n   t1 = -1.0; t[n] = 1.0;                                /* begin / end point */\r\n   for (i = 0; i <= n; i++) {                 /* plot each segment separately */\r\n      t2 = t[i];                                /* sub-divide at t[i-1], t[i] */\r\n      fx1 = (t1*(t1*xb-2*xc)-t2*(t1*(t1*xa-2*xb)+xc)+xd)/8-fx0;\r\n      fy1 = (t1*(t1*yb-2*yc)-t2*(t1*(t1*ya-2*yb)+yc)+yd)/8-fy0;\r\n      fx2 = (t2*(t2*xb-2*xc)-t1*(t2*(t2*xa-2*xb)+xc)+xd)/8-fx0;\r\n      fy2 = (t2*(t2*yb-2*yc)-t1*(t2*(t2*ya-2*yb)+yc)+yd)/8-fy0;\r\n      fx0 -= fx3 = (t2*(t2*(3*xb-t2*xa)-3*xc)+xd)/8;\r\n      fy0 -= fy3 = (t2*(t2*(3*yb-t2*ya)-3*yc)+yd)/8;\r\n      x3 = Math.floor(fx3+0.5); y3 = Math.floor(fy3+0.5);     /* scale bounds */\r\n      if (fx0 != 0.0) { fx1 *= fx0 = (x0-x3)/fx0; fx2 *= fx0; }\r\n      if (fy0 != 0.0) { fy1 *= fy0 = (y0-y3)/fy0; fy2 *= fy0; }\r\n      if (x0 != x3 || y0 != y3)                            /* segment t1 - t2 */\r\n         plotCubicBezierSeg(x0,y0, x0+fx1,y0+fy1, x0+fx2,y0+fy2, x3,y3);\r\n      x0 = x3; y0 = y3; fx0 = fx3; fy0 = fy3; t1 = t2;\r\n   }\r\n}\r\n\r\nfunction plotLineAA(x0, y0, x1, y1)\r\n{             /* draw a black (0) anti-aliased line on white (255) background */\r\n   var dx = Math.abs(x1-x0), sx = x0 < x1 ? 1 : -1;\r\n   var dy = Math.abs(y1-y0), sy = y0 < y1 ? 1 : -1;\r\n   var err = dx-dy, e2, x2;                               /* error value e_xy */\r\n   var ed = dx+dy == 0 ? 1 : Math.sqrt(dx*dx+dy*dy);\r\n\r\n   for ( ; ; ){                                                 /* pixel loop */\r\n      setPixelAA(x0,y0, 255*Math.abs(err-dx+dy)/ed);\r\n      e2 = err; x2 = x0;\r\n      if (2*e2 >= -dx) {                                            /* x step */\r\n         if (x0 == x1) break;\r\n         if (e2+dy < ed) setPixelAA(x0,y0+sy, 255*(e2+dy)/ed);\r\n         err -= dy; x0 += sx;\r\n      }\r\n      if (2*e2 <= dy) {                                             /* y step */\r\n         if (y0 == y1) break;\r\n         if (dx-e2 < ed) setPixelAA(x2+sx,y0, 255*(dx-e2)/ed);\r\n         err += dx; y0 += sy;\r\n      }\r\n   }\r\n}\r\n\r\nfunction plotCircleAA(xm, ym, r)\r\n{                     /* draw a black anti-aliased circle on white background */\r\n   var x = r, y = 0;            /* II. quadrant from bottom left to top right */\r\n   var i, x2, e2, err = 2-2*r;                             /* error of 1.step */\r\n   r = 1-err;\r\n   for ( ; ; ) {\r\n      i = 255*Math.abs(err+2*(x+y)-2)/r;          /* get blend value of pixel */\r\n      setPixelAA(xm+x, ym-y, i);                             /*   I. Quadrant */\r\n      setPixelAA(xm+y, ym+x, i);                             /*  II. Quadrant */\r\n      setPixelAA(xm-x, ym+y, i);                             /* III. Quadrant */\r\n      setPixelAA(xm-y, ym-x, i);                             /*  IV. Quadrant */\r\n      if (x == 0) break;\r\n      e2 = err; x2 = x;                                    /* remember values */\r\n      if (err > y) {                                                /* x step */\r\n         i = 255*(err+2*x-1)/r;                              /* outward pixel */\r\n         if (i < 255) {\r\n            setPixelAA(xm+x, ym-y+1, i);\r\n            setPixelAA(xm+y-1, ym+x, i);\r\n            setPixelAA(xm-x, ym+y-1, i);\r\n            setPixelAA(xm-y+1, ym-x, i);\r\n         }  \r\n         err -= --x*2-1; \r\n      } \r\n      if (e2 <= x2--) {                                             /* y step */\r\n         i = 255*(1-2*y-e2)/r;                                /* inward pixel */\r\n         if (i < 255) {\r\n            setPixelAA(xm+x2, ym-y, i);\r\n            setPixelAA(xm+y, ym+x2, i);\r\n            setPixelAA(xm-x2, ym+y, i);\r\n            setPixelAA(xm-y, ym-x2, i);\r\n         }  \r\n         err -= --y*2-1; \r\n      } \r\n   }\r\n}\r\n\r\nfunction plotEllipseRectAA(x0, y0, x1, y1)\r\n{        /* draw a black anti-aliased rectangular ellipse on white background */\r\n   var a = Math.abs(x1-x0), b = Math.abs(y1-y0), b1 = b&1;        /* diameter */\r\n   var dx = 4*(a-1)*b*b, dy = 4*(b1+1)*a*a;                /* error increment */\r\n   var f, ed, i, err = b1*a*a-dx+dy;                       /* error of 1.step */\r\n\r\n   if (a == 0 || b == 0) return plotLine(x0,y0, x1,y1);\r\n   if (x0 > x1) { x0 = x1; x1 += a; }        /* if called with swapped points */\r\n   if (y0 > y1) y0 = y1;                                  /* .. exchange them */\r\n   y0 += (b+1)>>1; y1 = y0-b1;                              /* starting pixel */\r\n   a = 8*a*a; b1 = 8*b*b;\r\n\r\n   for (;;) {                        /* approximate ed=Math.sqrt(dx*dx+dy*dy) */\r\n      i = Math.min(dx,dy); ed = Math.max(dx,dy);\r\n      if (y0 == y1+1 && err > dy && a > b1) ed = 255*4/a;            /* x-tip */\r\n      else ed = 255/(ed+2*ed*i*i/(4*ed*ed+i*i));             /* approximation */\r\n      i = ed*Math.abs(err+dx-dy);         /* get intensity value by pixel err */\r\n      setPixelAA(x0,y0, i); setPixelAA(x0,y1, i);\r\n      setPixelAA(x1,y0, i); setPixelAA(x1,y1, i);\r\n\r\n      if (f = 2*err+dy >= 0) {                  /* x step, remember condition */\r\n         if (x0 >= x1) break;\r\n         i = ed*(err+dx);\r\n         if (i < 256) {\r\n            setPixelAA(x0,y0+1, i); setPixelAA(x0,y1-1, i);\r\n            setPixelAA(x1,y0+1, i); setPixelAA(x1,y1-1, i);\r\n         }          /* do error increment later since values are still needed */\r\n      }\r\n      if (2*err <= dx) {                                            /* y step */\r\n         i = ed*(dy-err);\r\n         if (i < 256) {\r\n            setPixelAA(x0+1,y0, i); setPixelAA(x1-1,y0, i);\r\n            setPixelAA(x0+1,y1, i); setPixelAA(x1-1,y1, i);\r\n         }\r\n         y0++; y1--; err += dy += a;\r\n      }\r\n      if (f) { x0++; x1--; err -= dx -= b1; }            /* x error increment */\r\n   }\r\n   if (--x0 == x1++)                       /* too early stop of flat ellipses */\r\n      while (y0-y1 < b) {\r\n         i = 255*4*Math.abs(err+dx)/b1;           /* -> finish tip of ellipse */\r\n         setPixelAA(x0,++y0, i); setPixelAA(x1,y0, i);\r\n         setPixelAA(x0,--y1, i); setPixelAA(x1,y1, i);\r\n         err += dy += a;\r\n      }\r\n}\r\n\r\nfunction plotQuadBezierSegAA(x0, y0, x1, y1, x2, y2)\r\n{                    /* draw an limited anti-aliased quadratic Bezier segment */\r\n   var sx = x2-x1, sy = y2-y1;\r\n   var xx = x0-x1, yy = y0-y1, xy;              /* relative values for checks */\r\n   var dx, dy, err, ed, cur = xx*sy-yy*sx;                       /* curvature */\r\n\r\n   assert(xx*sx <= 0 && yy*sy <= 0);      /* sign of gradient must not change */\r\n\r\n   if (sx*sx+sy*sy > xx*xx+yy*yy) {                /* begin with shorter part */\r\n      x2 = x0; x0 = sx+x1; y2 = y0; y0 = sy+y1; cur = -cur;     /* swap P0 P2 */\r\n   }\r\n   if (cur != 0)\r\n   {                                                      /* no straight line */\r\n      xx += sx; xx *= sx = x0 < x2 ? 1 : -1;              /* x step direction */\r\n      yy += sy; yy *= sy = y0 < y2 ? 1 : -1;              /* y step direction */\r\n      xy = 2*xx*yy; xx *= xx; yy *= yy;             /* differences 2nd degree */\r\n      if (cur*sx*sy < 0) {                              /* negated curvature? */\r\n         xx = -xx; yy = -yy; xy = -xy; cur = -cur;\r\n      }\r\n      dx = 4.0*sy*(x1-x0)*cur+xx-xy;                /* differences 1st degree */\r\n      dy = 4.0*sx*(y0-y1)*cur+yy-xy;\r\n      xx += xx; yy += yy; err = dx+dy+xy;                   /* error 1st step */\r\n      do {\r\n         cur = Math.min(dx+xy,-xy-dy);\r\n         ed = Math.max(dx+xy,-xy-dy);           /* approximate error distance */\r\n         ed += 2*ed*cur*cur/(4*ed*ed+cur*cur);\r\n         setPixelAA(x0,y0, 255*Math.abs(err-dx-dy-xy)/ed);      /* plot curve */\r\n         if (x0 == x2 || y0 == y2) break;     /* last pixel -> curve finished */\r\n         x1 = x0; cur = dx-err; y1 = 2*err+dy < 0;\r\n         if (2*err+dx > 0) {                                        /* x step */\r\n            if (err-dy < ed) setPixelAA(x0,y0+sy, 255*Math.abs(err-dy)/ed);\r\n            x0 += sx; dx -= xy; err += dy += yy;\r\n         }\r\n         if (y1) {                                                  /* y step */\r\n            if (cur < ed) setPixelAA(x1+sx,y0, 255*Math.abs(cur)/ed);\r\n            y0 += sy; dy -= xy; err += dx += xx;\r\n         }\r\n      } while (dy < dx);                  /* gradient negates -> close curves */\r\n   }\r\n   plotLineAA(x0,y0, x2,y2);                  /* plot remaining needle to end */\r\n}\r\n\r\nfunction plotQuadBezierAA(x0, y0, x1, y1, x2, y2)\r\n{                             /* plot any anti-aliased quadratic Bezier curve */\r\n   var x = x0-x1, y = y0-y1, t = x0-2*x1+x2, r;\r\n\r\n   if (x*(x2-x1) > 0) {                              /* horizontal cut at P4? */\r\n      if (y*(y2-y1) > 0)                           /* vertical cut at P6 too? */\r\n         if (Math.abs((y0-2*y1+y2)/t*x) > Math.abs(y)) {      /* which first? */\r\n            x0 = x2; x2 = x+x1; y0 = y2; y2 = y+y1;            /* swap points */\r\n         }                            /* now horizontal cut at P4 comes first */\r\n      t = (x0-x1)/t;\r\n      r = (1-t)*((1-t)*y0+2.0*t*y1)+t*t*y2;                       /* By(t=P4) */\r\n      t = (x0*x2-x1*x1)*t/(x0-x1);                       /* gradient dP4/dx=0 */\r\n      x = Math.floor(t+0.5); y = Math.floor(r+0.5);\r\n      r = (y1-y0)*(t-x0)/(x1-x0)+y0;                  /* intersect P3 | P0 P1 */\r\n      plotQuadBezierSegAA(x0,y0, x,Math.floor(r+0.5), x,y);\r\n      r = (y1-y2)*(t-x2)/(x1-x2)+y2;                  /* intersect P4 | P1 P2 */\r\n      x0 = x1 = x; y0 = y; y1 = Math.floor(r+0.5);        /* P0 = P4, P1 = P8 */\r\n   }\r\n   if ((y0-y1)*(y2-y1) > 0) {                          /* vertical cut at P6? */\r\n      t = y0-2*y1+y2; t = (y0-y1)/t;\r\n      r = (1-t)*((1-t)*x0+2.0*t*x1)+t*t*x2;                       /* Bx(t=P6) */\r\n      t = (y0*y2-y1*y1)*t/(y0-y1);                       /* gradient dP6/dy=0 */\r\n      x = Math.floor(r+0.5); y = Math.floor(t+0.5);\r\n      r = (x1-x0)*(t-y0)/(y1-y0)+x0;                  /* intersect P6 | P0 P1 */\r\n      plotQuadBezierSegAA(x0,y0, Math.floor(r+0.5),y, x,y);\r\n      r = (x1-x2)*(t-y2)/(y1-y2)+x2;                  /* intersect P7 | P1 P2 */\r\n      x0 = x; x1 = Math.floor(r+0.5); y0 = y1 = y;        /* P0 = P6, P1 = P7 */\r\n   }\r\n   plotQuadBezierSegAA(x0,y0, x1,y1, x2,y2);                /* remaining part */\r\n}\r\n\r\nfunction plotQuadRationalBezierSegAA(x0, y0, x1, y1, x2, y2, w)\r\n{   /* draw an anti-aliased rational quadratic Bezier segment, squared weight */\r\n   var sx = x2-x1, sy = y2-y1;                  /* relative values for checks */\r\n   var dx = x0-x2, dy = y0-y2, xx = x0-x1, yy = y0-y1;\r\n   var xy = xx*sy+yy*sx, cur = xx*sy-yy*sx, err, ed, f;          /* curvature */\r\n\r\n   assert(xx*sx <= 0.0 && yy*sy <= 0.0);  /* sign of gradient must not change */\r\n\r\n   if (cur != 0.0 && w > 0.0) {                           /* no straight line */\r\n      if (sx*sx+sy*sy > xx*xx+yy*yy) {             /* begin with shorter part */\r\n         x2 = x0; x0 -= dx; y2 = y0; y0 -= dy; cur = -cur;      /* swap P0 P2 */\r\n      }\r\n      xx = 2.0*(4.0*w*sx*xx+dx*dx);                 /* differences 2nd degree */\r\n      yy = 2.0*(4.0*w*sy*yy+dy*dy);\r\n      sx = x0 < x2 ? 1 : -1;                              /* x step direction */\r\n      sy = y0 < y2 ? 1 : -1;                              /* y step direction */\r\n      xy = -2.0*sx*sy*(2.0*w*xy+dx*dy);\r\n\r\n      if (cur*sx*sy < 0) {                              /* negated curvature? */\r\n         xx = -xx; yy = -yy; cur = -cur; xy = -xy;\r\n      }\r\n      dx = 4.0*w*(x1-x0)*sy*cur+xx/2.0+xy;          /* differences 1st degree */\r\n      dy = 4.0*w*(y0-y1)*sx*cur+yy/2.0+xy;\r\n\r\n      if (w < 0.5 && dy > dx) {              /* flat ellipse, algorithm fails */\r\n         cur = (w+1.0)/2.0; w = Math.sqrt(w); xy = 1.0/(w+1.0);\r\n         sx = Math.floor((x0+2.0*w*x1+x2)*xy/2.0+0.5);     /* subdivide curve */\r\n         sy = Math.floor((y0+2.0*w*y1+y2)*xy/2.0+0.5);\r\n         dx = Math.floor((w*x1+x0)*xy+0.5); dy = Math.floor((y1*w+y0)*xy+0.5);\r\n         plotQuadRationalBezierSegAA(x0,y0, dx,dy, sx,sy, cur); /* plot apart */\r\n         dx = Math.floor((w*x1+x2)*xy+0.5); dy = Math.floor((y1*w+y2)*xy+0.5);\r\n         return plotQuadRationalBezierSegAA(sx,sy, dx,dy, x2,y2, cur);\r\n      }\r\n      err = dx+dy-xy;                                       /* error 1st step */\r\n      do {                                                      /* pixel loop */\r\n         cur = Math.min(dx-xy,xy-dy); ed = Math.max(dx-xy,xy-dy);\r\n         ed += 2*ed*cur*cur/(4.*ed*ed+cur*cur); /* approximate error distance */\r\n         x1 = 255*Math.abs(err-dx-dy+xy)/ed;/* get blend value by pixel error */\r\n         if (x1 < 256) setPixelAA(x0,y0, x1);                   /* plot curve */\r\n         if (f = 2*err+dy < 0) {                                    /* y step */\r\n            if (y0 == y2) return;             /* last pixel -> curve finished */\r\n            if (dx-err < ed) setPixelAA(x0+sx,y0, 255*Math.abs(dx-err)/ed);\r\n         }\r\n         if (2*err+dx > 0) {                                        /* x step */\r\n            if (x0 == x2) return;             /* last pixel -> curve finished */\r\n            if (err-dy < ed) setPixelAA(x0,y0+sy, 255*Math.abs(err-dy)/ed);\r\n            x0 += sx; dx += xy; err += dy += yy;\r\n         }\r\n         if (f) { y0 += sy; dy += xy; err += dx += xx; }            /* y step */\r\n      } while (dy < dx);               /* gradient negates -> algorithm fails */\r\n   }\r\n   plotLineAA(x0,y0, x2,y2);                  /* plot remaining needle to end */\r\n}\r\n\r\nfunction plotQuadRationalBezierAA(x0, y0, x1, y1, x2, y2, w)\r\n{                    /* plot any anti-aliased quadratic rational Bezier curve */\r\n   var x = x0-2*x1+x2, y = y0-2*y1+y2;\r\n   var xx = x0-x1, yy = y0-y1, ww, t, q;\r\n\r\n   assert(w >= 0.0);\r\n\r\n   if (xx*(x2-x1) > 0) {                             /* horizontal cut at P4? */\r\n      if (yy*(y2-y1) > 0)                          /* vertical cut at P6 too? */\r\n         if (Math.abs(xx*y) > Math.abs(yy*x)) {               /* which first? */\r\n            x0 = x2; x2 = xx+x1; y0 = y2; y2 = yy+y1;          /* swap points */\r\n         }                            /* now horizontal cut at P4 comes first */\r\n      if (x0 == x2 || w == 1.0) t = (x0-x1)/x;\r\n      else {                                 /* non-rational or rational case */\r\n         q = Math.sqrt(4.0*w*w*(x0-x1)*(x2-x1)+(x2-x0)*(x2-x0));\r\n         if (x1 < x0) q = -q;\r\n         t = (2.0*w*(x0-x1)-x0+x2+q)/(2.0*(1.0-w)*(x2-x0));        /* t at P4 */\r\n      }\r\n      q = 1.0/(2.0*t*(1.0-t)*(w-1.0)+1.0);                 /* sub-divide at t */\r\n      xx = (t*t*(x0-2.0*w*x1+x2)+2.0*t*(w*x1-x0)+x0)*q;               /* = P4 */\r\n      yy = (t*t*(y0-2.0*w*y1+y2)+2.0*t*(w*y1-y0)+y0)*q;\r\n      ww = t*(w-1.0)+1.0; ww *= ww*q;                    /* squared weight P3 */\r\n      w = ((1.0-t)*(w-1.0)+1.0)*Math.sqrt(q);                    /* weight P8 */\r\n      x = Math.floor(xx+0.5); y = Math.floor(yy+0.5);                   /* P4 */\r\n      yy = (xx-x0)*(y1-y0)/(x1-x0)+y0;                /* intersect P3 | P0 P1 */\r\n      plotQuadRationalBezierSegAA(x0,y0, x,Math.floor(yy+0.5), x,y, ww);\r\n      yy = (xx-x2)*(y1-y2)/(x1-x2)+y2;                /* intersect P4 | P1 P2 */\r\n      y1 = Math.floor(yy+0.5); x0 = x1 = x; y0 = y;       /* P0 = P4, P1 = P8 */\r\n   }\r\n   if ((y0-y1)*(y2-y1) > 0) {                          /* vertical cut at P6? */\r\n      if (y0 == y2 || w == 1.0) t = (y0-y1)/(y0-2.0*y1+y2);\r\n      else {                                 /* non-rational or rational case */\r\n         q = Math.sqrt(4.0*w*w*(y0-y1)*(y2-y1)+(y2-y0)*(y2-y0));\r\n         if (y1 < y0) q = -q;\r\n         t = (2.0*w*(y0-y1)-y0+y2+q)/(2.0*(1.0-w)*(y2-y0));        /* t at P6 */\r\n      }\r\n      q = 1.0/(2.0*t*(1.0-t)*(w-1.0)+1.0);                 /* sub-divide at t */\r\n      xx = (t*t*(x0-2.0*w*x1+x2)+2.0*t*(w*x1-x0)+x0)*q;               /* = P6 */\r\n      yy = (t*t*(y0-2.0*w*y1+y2)+2.0*t*(w*y1-y0)+y0)*q;\r\n      ww = t*(w-1.0)+1.0; ww *= ww*q;                    /* squared weight P5 */\r\n      w = ((1.0-t)*(w-1.0)+1.0)*Math.sqrt(q);                    /* weight P7 */\r\n      x = Math.floor(xx+0.5); y = Math.floor(yy+0.5);                   /* P6 */\r\n      xx = (x1-x0)*(yy-y0)/(y1-y0)+x0;                /* intersect P6 | P0 P1 */\r\n      plotQuadRationalBezierSegAA(x0,y0, Math.floor(xx+0.5),y, x,y, ww);\r\n      xx = (x1-x2)*(yy-y2)/(y1-y2)+x2;                /* intersect P7 | P1 P2 */\r\n      x1 = Math.floor(xx+0.5); x0 = x; y0 = y1 = y;       /* P0 = P6, P1 = P7 */\r\n   }\r\n   plotQuadRationalBezierSegAA(x0,y0, x1,y1, x2,y2, w*w);   /* remaining part */\r\n}\r\n\r\nfunction plotRotatedEllipseAA(x, y, a, b, angle)\r\n{                                   /* plot ellipse rotated by angle (radian) */\r\n   var xd = a*a, yd = b*b;\r\n   var s = Math.sin(angle), zd = (xd-yd)*s;               /* ellipse rotation */\r\n   xd = Math.sqrt(xd-zd*s), yd = Math.sqrt(yd+zd*s);       /* surrounding rect*/\r\n   a = Math.floor(xd+0.5); b = Math.floor(yd+0.5); zd = zd*a*b/(xd*yd);\r\n   plotRotatedEllipseRectAA(x-a,y-b, x+a,y+b, (4*zd*Math.cos(angle)));\r\n}\r\n\r\nfunction plotRotatedEllipseRectAA(x0, y0, x1, y1, zd)\r\n{                  /* rectangle enclosing the ellipse, integer rotation angle */\r\n   var xd = x1-x0, yd = y1-y0, w = xd*yd;\r\n   if (w != 0.0) w = (w-zd)/(w+w);                    /* squared weight of P1 */\r\n   assert(w <= 1.0 && w >= 0.0);                /* limit angle to |zd|<=xd*yd */\r\n   xd = Math.floor(xd*w+0.5); yd = Math.floor(yd*w+0.5);       /* snap to int */\r\n   plotQuadRationalBezierSegAA(x0,y0+yd, x0,y0, x0+xd,y0, 1.0-w);\r\n   plotQuadRationalBezierSegAA(x0,y0+yd, x0,y1, x1-xd,y1, w);\r\n   plotQuadRationalBezierSegAA(x1,y1-yd, x1,y1, x1-xd,y1, 1.0-w);\r\n   plotQuadRationalBezierSegAA(x1,y1-yd, x1,y0, x0+xd,y0, w);\r\n}\r\n\r\nfunction plotCubicBezierSegAA(x0, y0, x1, y1, x2, y2, x3, y3)\r\n{                           /* plot limited anti-aliased cubic Bezier segment */\r\n   var f, fx, fy, leg = 1;\r\n   var sx = x0 < x3 ? 1 : -1, sy = y0 < y3 ? 1 : -1;        /* step direction */\r\n   var xc = -Math.abs(x0+x1-x2-x3), xa = xc-4*sx*(x1-x2), xb = sx*(x0-x1-x2+x3);\r\n   var yc = -Math.abs(y0+y1-y2-y3), ya = yc-4*sy*(y1-y2), yb = sy*(y0-y1-y2+y3);\r\n   var ab, ac, bc, ba, xx, xy, yy, dx, dy, ex, px, py, ed, ip, EP = 0.01;\r\n                                                 /* check for curve restrains */\r\n   /* slope P0-P1 == P2-P3    and  (P0-P3 == P1-P2      or   no slope change) */\r\n   assert((x1-x0)*(x2-x3) < EP && ((x3-x0)*(x1-x2) < EP || xb*xb < xa*xc+EP));\r\n   assert((y1-y0)*(y2-y3) < EP && ((y3-y0)*(y1-y2) < EP || yb*yb < ya*yc+EP));\r\n\r\n   if (xa == 0 && ya == 0)                                /* quadratic Bezier */\r\n      return plotQuadBezierSegAA(x0,y0, (3*x1-x0)>>1,(3*y1-y0)>>1, x3,y3);\r\n   x1 = (x1-x0)*(x1-x0)+(y1-y0)*(y1-y0)+1;                    /* line lengths */\r\n   x2 = (x2-x3)*(x2-x3)+(y2-y3)*(y2-y3)+1;\r\nexit:   \r\n   do {                                                /* loop over both ends */\r\n      ab = xa*yb-xb*ya; ac = xa*yc-xc*ya; bc = xb*yc-xc*yb;\r\n      ip = 4*ab*bc-ac*ac;                   /* self intersection loop at all? */\r\n      ex = ab*(ab+ac-3*bc)+ac*ac;       /* P0 part of self-intersection loop? */\r\n      f = ex > 0 ? 1 : Math.floor(Math.sqrt(1+1024/x1));   /* calc resolution */\r\n      ab *= f; ac *= f; bc *= f; ex *= f*f;            /* increase resolution */\r\n      xy = 9*(ab+ac+bc)/8; ba = 8*(xa-ya);  /* init differences of 1st degree */\r\n      dx = 27*(8*ab*(yb*yb-ya*yc)+ex*(ya+2*yb+yc))/64-ya*ya*(xy-ya);\r\n      dy = 27*(8*ab*(xb*xb-xa*xc)-ex*(xa+2*xb+xc))/64-xa*xa*(xy+xa);\r\n                                            /* init differences of 2nd degree */\r\n      xx = 3*(3*ab*(3*yb*yb-ya*ya-2*ya*yc)-ya*(3*ac*(ya+yb)+ya*ba))/4;\r\n      yy = 3*(3*ab*(3*xb*xb-xa*xa-2*xa*xc)-xa*(3*ac*(xa+xb)+xa*ba))/4;\r\n      xy = xa*ya*(6*ab+6*ac-3*bc+ba); ac = ya*ya; ba = xa*xa;\r\n      xy = 3*(xy+9*f*(ba*yb*yc-xb*xc*ac)-18*xb*yb*ab)/8;\r\n\r\n      if (ex < 0) {         /* negate values if inside self-intersection loop */\r\n         dx = -dx; dy = -dy; xx = -xx; yy = -yy; xy = -xy; ac = -ac; ba = -ba;\r\n      }                                     /* init differences of 3rd degree */\r\n      ab = 6*ya*ac; ac = -6*xa*ac; bc = 6*ya*ba; ba = -6*xa*ba;\r\n      dx += xy; ex = dx+dy; dy += xy;                    /* error of 1st step */\r\n loop:\r\n     for (fx = fy = f; ; ) {\r\n\t     if (x0 == x3 || y0 == y3) break exit;\r\n         y1 = Math.min(Math.abs(xy-dx),Math.abs(dy-xy));\r\n         ed = Math.max(Math.abs(xy-dx),Math.abs(dy-xy));   /* approximate err */\r\n         ed = f*(ed+2*ed*y1*y1/(4*ed*ed+y1*y1));\r\n         y1 = 255*Math.abs(ex-(f-fx+1)*dx-(f-fy+1)*dy+f*xy)/ed;\r\n         if (y1 < 256) setPixelAA(x0, y0, y1);                  /* plot curve */\r\n         px = Math.abs(ex-(f-fx+1)*dx+(fy-1)*dy);   /* pixel varensity x move */\r\n         py = Math.abs(ex+(fx-1)*dx-(f-fy+1)*dy);   /* pixel varensity y move */\r\n         y2 = y0;\r\n         do {                                  /* move sub-steps of one pixel */\r\n            if (ip >= -EP)               /* intersection possible? -> check.. */\r\n               if (dx+xx > xy || dy+yy < xy) break loop;  /* two x or y steps */\r\n            y1 = 2*ex+dx;                    /* save value for test of y step */\r\n            if (2*ex+dy > 0) {                                  /* x sub-step */\r\n               fx--; ex += dx += xx; dy += xy += ac; yy += bc; xx += ab;\r\n            } else if (y1 > 0) break loop;                /* tiny nearly cusp */\r\n            if (y1 <= 0) {                                      /* y sub-step */\r\n               fy--; ex += dy += yy; dx += xy += bc; xx += ac; yy += ba;\r\n            }\r\n         } while (fx > 0 && fy > 0);                       /* pixel complete? */\r\n         if (2*fy <= f) {                           /* x+ anti-aliasing pixel */\r\n            if (py < ed) setPixelAA(x0+sx, y0, 255*py/ed);      /* plot curve */\r\n            y0 += sy; fy += f;                                      /* y step */\r\n         }\r\n         if (2*fx <= f) {                           /* y+ anti-aliasing pixel */\r\n            if (px < ed) setPixelAA(x0, y2+sy, 255*px/ed);      /* plot curve */\r\n            x0 += sx; fx += f;                                      /* x step */\r\n         }\r\n      }\r\n      if (2*ex < dy && 2*fy <= f+2) {         /* round x+ approximation pixel */\r\n         if (py < ed) setPixelAA(x0+sx, y0, 255*py/ed);         /* plot curve */\r\n         y0 += sy;\r\n      }\r\n      if (2*ex > dx && 2*fx <= f+2) {         /* round y+ approximation pixel */\r\n         if (px < ed) setPixelAA(x0, y2+sy, 255*px/ed);         /* plot curve */\r\n         x0 += sx;\r\n      }\r\n      xx = x0; x0 = x3; x3 = xx; sx = -sx; xb = -xb;             /* swap legs */\r\n      yy = y0; y0 = y3; y3 = yy; sy = -sy; yb = -yb; x1 = x2;\r\n   } while (leg--);                                          /* try other end */\r\n   plotLineAA(x0,y0, x3,y3);     /* remaining part in case of cusp or crunode */\r\n}\r\n\r\nfunction plotCubicBezierAA(x0, y0, x1, y1, x2, y2, x3, y3)\r\n{                                              /* plot any cubic Bezier curve */\r\n   var n = 0, i = 0;\r\n   var xc = x0+x1-x2-x3, xa = xc-4*(x1-x2);\r\n   var xb = x0-x1-x2+x3, xd = xb+4*(x1+x2);\r\n   var yc = y0+y1-y2-y3, ya = yc-4*(y1-y2);\r\n   var yb = y0-y1-y2+y3, yd = yb+4*(y1+y2);\r\n   var fx0 = x0, fx1, fx2, fx3, fy0 = y0, fy1, fy2, fy3;\r\n   var t1 = xb*xb-xa*xc, t2, t = new Array(5);\r\n                                 /* sub-divide curve at gradient sign changes */\r\n   if (xa == 0) {                                               /* horizontal */\r\n      if (Math.abs(xc) < 2*Math.abs(xb)) t[n++] = xc/(2.0*xb);  /* one change */\r\n   } else if (t1 > 0.0) {                                      /* two changes */\r\n      t2 = Math.sqrt(t1);\r\n      t1 = (xb-t2)/xa; if (Math.abs(t1) < 1.0) t[n++] = t1;\r\n      t1 = (xb+t2)/xa; if (Math.abs(t1) < 1.0) t[n++] = t1;\r\n   }\r\n   t1 = yb*yb-ya*yc;\r\n   if (ya == 0) {                                                 /* vertical */\r\n      if (Math.abs(yc) < 2*Math.abs(yb)) t[n++] = yc/(2.0*yb);  /* one change */\r\n   } else if (t1 > 0.0) {                                      /* two changes */\r\n      t2 = Math.sqrt(t1);\r\n      t1 = (yb-t2)/ya; if (Math.abs(t1) < 1.0) t[n++] = t1;\r\n      t1 = (yb+t2)/ya; if (Math.abs(t1) < 1.0) t[n++] = t1;\r\n   }\r\n   for (i = 1; i < n; i++)                         /* bubble sort of 4 points */\r\n      if ((t1 = t[i-1]) > t[i]) { t[i-1] = t[i]; t[i] = t1; i = 0; }\r\n\r\n   t1 = -1.0; t[n] = 1.0;                                /* begin / end point */\r\n   for (i = 0; i <= n; i++) {                 /* plot each segment separately */\r\n      t2 = t[i];                                /* sub-divide at t[i-1], t[i] */\r\n      fx1 = (t1*(t1*xb-2*xc)-t2*(t1*(t1*xa-2*xb)+xc)+xd)/8-fx0;\r\n      fy1 = (t1*(t1*yb-2*yc)-t2*(t1*(t1*ya-2*yb)+yc)+yd)/8-fy0;\r\n      fx2 = (t2*(t2*xb-2*xc)-t1*(t2*(t2*xa-2*xb)+xc)+xd)/8-fx0;\r\n      fy2 = (t2*(t2*yb-2*yc)-t1*(t2*(t2*ya-2*yb)+yc)+yd)/8-fy0;\r\n      fx0 -= fx3 = (t2*(t2*(3*xb-t2*xa)-3*xc)+xd)/8;\r\n      fy0 -= fy3 = (t2*(t2*(3*yb-t2*ya)-3*yc)+yd)/8;\r\n      x3 = Math.floor(fx3+0.5); y3 = Math.floor(fy3+0.5);     /* scale bounds */\r\n      if (fx0 != 0.0) { fx1 *= fx0 = (x0-x3)/fx0; fx2 *= fx0; }\r\n      if (fy0 != 0.0) { fy1 *= fy0 = (y0-y3)/fy0; fy2 *= fy0; }\r\n      if (x0 != x3 || y0 != y3)                            /* segment t1 - t2 */\r\n         plotCubicBezierSegAA(x0,y0, x0+fx1,y0+fy1, x0+fx2,y0+fy2, x3,y3);\r\n      x0 = x3; y0 = y3; fx0 = fx3; fy0 = fy3; t1 = t2;\r\n   }\r\n}\r\n\r\nfunction plotLineWidth(x0, y0, x1, y1, th)\r\n{                              /* plot an anti-aliased line of width th pixel */\r\n   var dx = Math.abs(x1-x0), sx = x0 < x1 ? 1 : -1; \r\n   var dy = Math.abs(y1-y0), sy = y0 < y1 ? 1 : -1; \r\n   var err, e2 = Math.sqrt(dx*dx+dy*dy);                            /* length */\r\n\r\n   if (th <= 1 || e2 == 0) return plotLineAA(x0,y0, x1,y1);         /* assert */\r\n   dx *= 255/e2; dy *= 255/e2; th = 255*(th-1);               /* scale values */\r\n\r\n   if (dx < dy) {                                               /* steep line */\r\n      x1 = Math.round((e2+th/2)/dy);                          /* start offset */\r\n      err = x1*dy-th/2;                  /* shift error value to offset width */\r\n      for (x0 -= x1*sx; ; y0 += sy) {\r\n         setPixelAA(x1 = x0, y0, err);                  /* aliasing pre-pixel */\r\n         for (e2 = dy-err-th; e2+dy < 255; e2 += dy)  \r\n            setPixel(x1 += sx, y0);                      /* pixel on the line */\r\n         setPixelAA(x1+sx, y0, e2);                    /* aliasing post-pixel */\r\n         if (y0 == y1) break;\r\n         err += dx;                                                 /* y-step */\r\n         if (err > 255) { err -= dy; x0 += sx; }                    /* x-step */ \r\n      }\r\n   } else {                                                      /* flat line */\r\n      y1 = Math.round((e2+th/2)/dx);                          /* start offset */\r\n      err = y1*dx-th/2;                  /* shift error value to offset width */\r\n      for (y0 -= y1*sy; ; x0 += sx) {\r\n         setPixelAA(x0, y1 = y0, err);                  /* aliasing pre-pixel */\r\n         for (e2 = dx-err-th; e2+dx < 255; e2 += dx) \r\n            setPixel(x0, y1 += sy);                      /* pixel on the line */\r\n         setPixelAA(x0, y1+sy, e2);                    /* aliasing post-pixel */\r\n         if (x0 == x1) break;\r\n         err += dy;                                                 /* x-step */ \r\n         if (err > 255) { err -= dx; y0 += sy; }                    /* y-step */\r\n      } \r\n   }\r\n}\r\n\r\nfunction plotEllipseRectWidth(x0, y0, x1, y1, th)\r\n{               /* draw anti-aliased ellipse inside rectangle with thick line */\r\n   var a = Math.abs(x1-x0), b = Math.abs(y1-y0), b1 = b&1;  /* outer diameter */\r\n   var a2 = a-2*th, b2 = b-2*th;                            /* inner diameter */\r\n   var dx = 4*(a-1)*b*b, dy = 4*(b1-1)*a*a;                /* error increment */\r\n   var i = a+b2, err = b1*a*a, dx2, dy2, e2, ed; \r\n                                                     /* thick line correction */\r\n   if (th < 1.5) return plotEllipseRectAA(x0,y0, x1,y1);\r\n   if ((th-1)*(2*b-th) > a*a) b2 = Math.sqrt(a*(b-a)*i*a2)/(a-th);       \r\n   if ((th-1)*(2*a-th) > b*b) { a2 = Math.sqrt(b*(a-b)*i*b2)/(b-th); th = (a-a2)/2; }\r\n   if (a == 0 || b == 0) return plotLine(x0,y0, x1,y1);\r\n   if (x0 > x1) { x0 = x1; x1 += a; }        /* if called with swapped points */\r\n   if (y0 > y1) y0 = y1;                                  /* .. exchange them */\r\n   if (b2 <= 0) th = a;                                     /* filled ellipse */\r\n   e2 = th-Math.floor(th); th = x0+th-e2;\r\n   dx2 = 4*(a2+2*e2-1)*b2*b2; dy2 = 4*(b1-1)*a2*a2; e2 = dx2*e2;\r\n   y0 += (b+1)>>1; y1 = y0-b1;                              /* starting pixel */\r\n   a = 8*a*a; b1 = 8*b*b; a2 = 8*a2*a2; b2 = 8*b2*b2;\r\n   \r\n   do {          \r\n      for (;;) {                           \r\n         if (err < 0 || x0 > x1) { i = x0; break; }\r\n         i = Math.min(dx,dy); ed = Math.max(dx,dy);\r\n         if (y0 == y1+1 && 2*err > dx && a > b1) ed = a/4;           /* x-tip */\r\n         else ed += 2*ed*i*i/(4*ed*ed+i*i+1)+1;/* approx ed=sqrt(dx*dx+dy*dy) */\r\n         i = 255*err/ed;                             /* outside anti-aliasing */\r\n         setPixelAA(x0,y0, i); setPixelAA(x0,y1, i);\r\n         setPixelAA(x1,y0, i); setPixelAA(x1,y1, i);\r\n         if (err+dy+a < dx) { i = x0+1; break; }\r\n         x0++; x1--; err -= dx; dx -= b1;                /* x error increment */\r\n      }\r\n      for (; i < th && 2*i <= x0+x1; i++) {                /* fill line pixel */\r\n         setPixel(i,y0); setPixel(x0+x1-i,y0); \r\n         setPixel(i,y1); setPixel(x0+x1-i,y1);\r\n      }    \r\n      while (e2 > 0 && x0+x1 >= 2*th) {               /* inside anti-aliasing */\r\n         i = Math.min(dx2,dy2); ed = Math.max(dx2,dy2);\r\n         if (y0 == y1+1 && 2*e2 > dx2 && a2 > b2) ed = a2/4;         /* x-tip */\r\n         else  ed += 2*ed*i*i/(4*ed*ed+i*i);                 /* approximation */\r\n         i = 255-255*e2/ed;             /* get intensity value by pixel error */\r\n         setPixelAA(th,y0, i); setPixelAA(x0+x1-th,y0, i);\r\n         setPixelAA(th,y1, i); setPixelAA(x0+x1-th,y1, i);\r\n         if (e2+dy2+a2 < dx2) break; \r\n         th++; e2 -= dx2; dx2 -= b2;                     /* x error increment */\r\n      }\r\n      e2 += dy2 += a2;\r\n      y0++; y1--; err += dy += a;                                   /* y step */\r\n   } while (x0 < x1);\r\n   \r\n   if (y0-y1 <= b)             \r\n   {\r\n      if (err > dy+a) { y0--; y1++; err -= dy -= a; }\r\n      for (; y0-y1 <= b; err += dy += a) { /* too early stop of flat ellipses */\r\n         i = 255*4*err/b1;                        /* -> finish tip of ellipse */\r\n         setPixelAA(x0,y0, i); setPixelAA(x1,y0++, i);\r\n         setPixelAA(x0,y1, i); setPixelAA(x1,y1--, i);\r\n      }\r\n   }\r\n}\r\n\r\nfunction plotQuadRationalBezierWidthSeg(x0, y0, x1, y1, x2, y2, w, th)\r\n{   /* plot a limited rational Bezier segment of thickness th, squared weight */\r\n   var sx = x2-x1, sy = y2-y1;                  /* relative values for checks */\r\n   var dx = x0-x2, dy = y0-y2, xx = x0-x1, yy = y0-y1;\r\n   var xy = xx*sy+yy*sx, cur = xx*sy-yy*sx, err, e2, ed;         /* curvature */\r\n\r\n   assert(xx*sx <= 0.0 && yy*sy <= 0.0);  /* sign of gradient must not change */\r\n\r\n   if (cur != 0.0 && w > 0.0) {                           /* no straight line */\r\n      if (sx*sx+sy*sy > xx*xx+yy*yy) {              /* begin with longer part */\r\n         x2 = x0; x0 -= dx; y2 = y0; y0 -= dy; cur = -cur;      /* swap P0 P2 */\r\n      }\r\n      xx = 2.0*(4.0*w*sx*xx+dx*dx);                 /* differences 2nd degree */\r\n      yy = 2.0*(4.0*w*sy*yy+dy*dy);\r\n      sx = x0 < x2 ? 1 : -1;                              /* x step direction */\r\n      sy = y0 < y2 ? 1 : -1;                              /* y step direction */\r\n      xy = -2.0*sx*sy*(2.0*w*xy+dx*dy);\r\n\r\n      if (cur*sx*sy < 0) {                              /* negated curvature? */\r\n         xx = -xx; yy = -yy; cur = -cur; xy = -xy;\r\n      }\r\n      dx = 4.0*w*(x1-x0)*sy*cur+xx/2.0;             /* differences 1st degree */\r\n      dy = 4.0*w*(y0-y1)*sx*cur+yy/2.0;\r\n\r\n      if (w < 0.5 && (dx+xx <= 0 || dy+yy >= 0)) {/* flat ellipse, algo fails */\r\n         cur = (w+1.0)/2.0; w = fsqrt(w); xy = 1.0/(w+1.0);\r\n         sx = Math.floor((x0+2.0*w*x1+x2)*xy/2.0+0.5);    /* subdivide curve  */\r\n         sy = Math.floor((y0+2.0*w*y1+y2)*xy/2.0+0.5);     /* plot separately */\r\n         dx = Math.floor((w*x1+x0)*xy+0.5); dy = Math.floor((y1*w+y0)*xy+0.5);\r\n         plotQuadRationalBezierWidthSeg(x0,y0, dx,dy, sx,sy, cur, th);\r\n         dx = Math.floor((w*x1+x2)*xy+0.5); dy = Math.floor((y1*w+y2)*xy+0.5);\r\n         return plotQuadRationalBezierWidthSeg(sx,sy, dx,dy, x2,y2, cur, th);\r\n      }\r\n      fail:\r\n      for (err = 0; dy+2*yy < 0 && dx+2*xx > 0; ) /* loop of steep/flat curve */\r\n         if (dx+dy+xy < 0) {                                   /* steep curve */\r\n            do {\r\n               ed = -dy-2*dy*dx*dx/(4.*dy*dy+dx*dx);      /* approximate sqrt */\r\n               w = (th-1)*ed;                             /* scale line width */\r\n               x1 = Math.floor((err-ed-w/2)/dy);              /* start offset */\r\n               e2 = err-x1*dy-w/2;                   /* error value at offset */\r\n               x1 = x0-x1*sx;                                  /* start point */\r\n               setPixelAA(x1, y0, 255*e2/ed);           /* aliasing pre-pixel */\r\n               for (e2 = -w-dy-e2; e2-dy < ed; e2 -= dy)\r\n                  setPixel(x1 += sx, y0);              /* pixel on thick line */\r\n               setPixelAA(x1+sx, y0, 255*e2/ed);       /* aliasing post-pixel */\r\n               if (y0 == y2) return;          /* last pixel -> curve finished */\r\n               y0 += sy; dy += xy; err += dx; dx += xx;             /* y step */\r\n               if (2*err+dy > 0) {                            /* e_x+e_xy > 0 */\r\n                  x0 += sx; dx += xy; err += dy; dy += yy;          /* x step */\r\n               }\r\n               if (x0 != x2 && (dx+2*xx <= 0 || dy+2*yy >= 0))\r\n                  if (Math.abs(y2-y0) > Math.abs(x2-x0)) break fail;\r\n                  else break;                             /* other curve near */\r\n            } while (dx+dy+xy < 0);                  /* gradient still steep? */\r\n                                           /* change from steep to flat curve */\r\n            for (cur = err-dy-w/2, y1 = y0; cur < ed; y1 += sy, cur += dx) {\r\n               for (e2 = cur, x1 = x0; e2-dy < ed; e2 -= dy)\r\n                  setPixel(x1 -= sx, y1);              /* pixel on thick line */\r\n               setPixelAA(x1-sx, y1, 255*e2/ed);       /* aliasing post-pixel */\r\n            }\r\n         } else {                                               /* flat curve */\r\n            do {\r\n               ed = dx+2*dx*dy*dy/(4.*dx*dx+dy*dy);       /* approximate sqrt */\r\n               w = (th-1)*ed;                             /* scale line width */\r\n               y1 = Math.floor((err+ed+w/2)/dx);              /* start offset */\r\n               e2 = y1*dx-w/2-err;                   /* error value at offset */\r\n               y1 = y0-y1*sy;                                  /* start point */\r\n               setPixelAA(x0, y1, 255*e2/ed);           /* aliasing pre-pixel */\r\n               for (e2 = dx-e2-w; e2+dx < ed; e2 += dx)\r\n                  setPixel(x0, y1 += sy);              /* pixel on thick line */\r\n               setPixelAA(x0, y1+sy, 255*e2/ed);       /* aliasing post-pixel */\r\n               if (x0 == x2) return;          /* last pixel -> curve finished */\r\n               x0 += sx; dx += xy; err += dy; dy += yy;             /* x step */\r\n               if (2*err+dx < 0)  {                           /* e_y+e_xy < 0 */\r\n                  y0 += sy; dy += xy; err += dx; dx += xx;          /* y step */\r\n               }\r\n               if (y0 != y2 && (dx+2*xx <= 0 || dy+2*yy >= 0))\r\n                  if (Math.abs(y2-y0) <= Math.abs(x2-x0)) break fail;  \r\n                  else break;                             /* other curve near */\r\n            } while (dx+dy+xy >= 0);                  /* gradient still flat? */\r\n                                           /* change from flat to steep curve */ \r\n            for (cur = -err+dx-w/2, x1 = x0; cur < ed; x1 += sx, cur -= dy) {\r\n               for (e2 = cur, y1 = y0; e2+dx < ed; e2 += dx)\r\n                  setPixel(x1, y1 -= sy);              /* pixel on thick line */\r\n               setPixelAA(x1, y1-sy, 255*e2/ed);       /* aliasing post-pixel */\r\n            }\r\n         }\r\n      }\r\n   plotLineWidth(x0,y0, x2,y2, th);            /* confusing error values  */\r\n}\r\n\r\nfunction plotQuadRationalBezierWidth(x0, y0, x1, y1, x2, y2, w, th)\r\n{                    /* plot any anti-aliased quadratic rational Bezier curve */\r\n   var x = x0-2*x1+x2, y = y0-2*y1+y2;\r\n   var xx = x0-x1, yy = y0-y1, ww, t, q;\r\n\r\n   assert(w >= 0.0);\r\n\r\n   if (xx*(x2-x1) > 0) {                             /* horizontal cut at P4? */\r\n      if (yy*(y2-y1) > 0)                          /* vertical cut at P6 too? */\r\n         if (Math.abs(xx*y) > Math.abs(yy*x)) {               /* which first? */\r\n            x0 = x2; x2 = xx+x1; y0 = y2; y2 = yy+y1;          /* swap points */\r\n         }                            /* now horizontal cut at P4 comes first */\r\n      if (x0 == x2 || w == 1.0) t = (x0-x1)/x;\r\n      else {                                 /* non-rational or rational case */\r\n         q = Math.sqrt(4.0*w*w*(x0-x1)*(x2-x1)+(x2-x0)*(x2-x0));\r\n         if (x1 < x0) q = -q;\r\n         t = (2.0*w*(x0-x1)-x0+x2+q)/(2.0*(1.0-w)*(x2-x0));        /* t at P4 */\r\n      }\r\n      q = 1.0/(2.0*t*(1.0-t)*(w-1.0)+1.0);                 /* sub-divide at t */\r\n      xx = (t*t*(x0-2.0*w*x1+x2)+2.0*t*(w*x1-x0)+x0)*q;               /* = P4 */\r\n      yy = (t*t*(y0-2.0*w*y1+y2)+2.0*t*(w*y1-y0)+y0)*q;\r\n      ww = t*(w-1.0)+1.0; ww *= ww*q;                    /* squared weight P3 */\r\n      w = ((1.0-t)*(w-1.0)+1.0)*Math.sqrt(q);                    /* weight P8 */\r\n      x = Math.floor(xx+0.5); y = Math.floor(yy+0.5);                   /* P4 */\r\n      yy = (xx-x0)*(y1-y0)/(x1-x0)+y0;                /* intersect P3 | P0 P1 */\r\n      plotQuadRationalBezierWidthSeg(x0,y0, x,Math.floor(yy+0.5), x,y, ww, th);\r\n      yy = (xx-x2)*(y1-y2)/(x1-x2)+y2;                /* intersect P4 | P1 P2 */\r\n      y1 = Math.floor(yy+0.5); x0 = x1 = x; y0 = y;       /* P0 = P4, P1 = P8 */\r\n   }\r\n   if ((y0-y1)*(y2-y1) > 0) {                          /* vertical cut at P6? */\r\n      if (y0 == y2 || w == 1.0) t = (y0-y1)/(y0-2.0*y1+y2);\r\n      else {                                 /* non-rational or rational case */\r\n         q = Math.sqrt(4.0*w*w*(y0-y1)*(y2-y1)+(y2-y0)*(y2-y0));\r\n         if (y1 < y0) q = -q;\r\n         t = (2.0*w*(y0-y1)-y0+y2+q)/(2.0*(1.0-w)*(y2-y0));        /* t at P6 */\r\n      }\r\n      q = 1.0/(2.0*t*(1.0-t)*(w-1.0)+1.0);                 /* sub-divide at t */\r\n      xx = (t*t*(x0-2.0*w*x1+x2)+2.0*t*(w*x1-x0)+x0)*q;               /* = P6 */\r\n      yy = (t*t*(y0-2.0*w*y1+y2)+2.0*t*(w*y1-y0)+y0)*q;\r\n      ww = t*(w-1.0)+1.0; ww *= ww*q;                    /* squared weight P5 */\r\n      w = ((1.0-t)*(w-1.0)+1.0)*Math.sqrt(q);                    /* weight P7 */\r\n      x = Math.floor(xx+0.5); y = Math.floor(yy+0.5);                   /* P6 */\r\n      xx = (x1-x0)*(yy-y0)/(y1-y0)+x0;                /* intersect P6 | P0 P1 */\r\n      plotQuadRationalBezierWidthSeg(x0,y0, Math.floor(xx+0.5),y, x,y, ww, th);\r\n      xx = (x1-x2)*(yy-y2)/(y1-y2)+x2;                /* intersect P7 | P1 P2 */\r\n      x1 = Math.floor(xx+0.5); x0 = x; y0 = y1 = y;       /* P0 = P6, P1 = P7 */\r\n   }\r\n   plotQuadRationalBezierWidthSeg(x0,y0, x1,y1, x2,y2, w*w, th);  \r\n}\r\n\r\nfunction plotRotatedEllipseWidth(x, y, a, b, angle, th)\r\n{                                   /* plot ellipse rotated by angle (radian) */\r\n   var xd = a*a, yd = b*b;\r\n   var s = Math.sin(angle), zd = (xd-yd)*s;               /* ellipse rotation */\r\n   xd = Math.sqrt(xd-zd*s), yd = Math.sqrt(yd+zd*s);       /* surrounding rect*/\r\n   a = Math.floor(xd+0.5); b = Math.floor(yd+0.5); zd = zd*a*b/(xd*yd);\r\n   plotRotatedEllipseRectWidth(x-a,y-b, x+a,y+b, (4*zd*Math.cos(angle)), th);\r\n}\r\n\r\nfunction plotRotatedEllipseRectWidth(x0, y0, x1, y1, zd, th)\r\n{                  /* rectangle enclosing the ellipse, integer rotation angle */\r\n   var xd = x1-x0, yd = y1-y0, w = xd*yd;\r\n   if (w != 0.0) w = (w-zd)/(w+w);                    /* squared weight of P1 */\r\n   assert(w <= 1.0 && w >= 0.0);                /* limit angle to |zd|<=xd*yd */\r\n   xd = Math.floor(xd*w+0.5); yd = Math.floor(yd*w+0.5);       /* snap to int */\r\n   plotQuadRationalBezierWidthSeg(x0,y0+yd, x0,y0, x0+xd,y0, 1.0-w, th);\r\n   plotQuadRationalBezierWidthSeg(x0,y0+yd, x0,y1, x1-xd,y1, w, th);\r\n   plotQuadRationalBezierWidthSeg(x1,y1-yd, x1,y1, x1-xd,y1, 1.0-w, th);\r\n   plotQuadRationalBezierWidthSeg(x1,y1-yd, x1,y0, x0+xd,y0, w, th);\r\n}\r\n\r\nfunction plotCubicBezierWidth(x0, y0, x1, y1, x2, y2, x3, y3, th)\r\n{                                              /* plot any cubic Bezier curve */\r\n   var n = 0, i = 0;\r\n   var xc = x0+x1-x2-x3, xa = xc-4*(x1-x2);\r\n   var xb = x0-x1-x2+x3, xd = xb+4*(x1+x2);\r\n   var yc = y0+y1-y2-y3, ya = yc-4*(y1-y2);\r\n   var yb = y0-y1-y2+y3, yd = yb+4*(y1+y2);\r\n   var fx0 = x0, fx1, fx2, fx3, fy0 = y0, fy1, fy2, fy3;\r\n   var t1 = xb*xb-xa*xc, t2, t = new Array(7);\r\n                                 /* sub-divide curve at gradient sign changes */\r\n   if (xa == 0) {                                               /* horizontal */\r\n      if (Math.abs(xc) < 2*Math.abs(xb)) t[n++] = xc/(2.0*xb);  /* one change */\r\n   } else if (t1 > 0.0) {                                      /* two changes */\r\n      t2 = Math.sqrt(t1);\r\n      t1 = (xb-t2)/xa; if (Math.abs(t1) < 1.0) t[n++] = t1;\r\n      t1 = (xb+t2)/xa; if (Math.abs(t1) < 1.0) t[n++] = t1;\r\n   }\r\n   t1 = yb*yb-ya*yc;\r\n   if (ya == 0) {                                                 /* vertical */\r\n      if (Math.abs(yc) < 2*Math.abs(yb)) t[n++] = yc/(2.0*yb);  /* one change */\r\n   } else if (t1 > 0.0) {                                      /* two changes */\r\n      t2 = Math.sqrt(t1);\r\n      t1 = (yb-t2)/ya; if (Math.abs(t1) < 1.0) t[n++] = t1;\r\n      t1 = (yb+t2)/ya; if (Math.abs(t1) < 1.0) t[n++] = t1;\r\n   }\r\n   t1 = 2*(xa*yb-xb*ya); t2 = xa*yc-xc*ya;      /* divide at inflection point */\r\n   i = t2*t2-2*t1*(xb*yc-xc*yb);\r\n   if (i > 0) {\r\n      i = Math.sqrt(i);\r\n      t[n] = (t2+i)/t1; if (Math.abs(t[n]) < 1.0) n++;\r\n      t[n] = (t2-i)/t1; if (Math.abs(t[n]) < 1.0) n++;\r\n   }\r\n   for (i = 1; i < n; i++)                         /* bubble sort of 4 points */\r\n      if ((t1 = t[i-1]) > t[i]) { t[i-1] = t[i]; t[i] = t1; i = 0; }\r\n\r\n   t1 = -1.0; t[n] = 1.0;                               /* begin / end points */\r\n   for (i = 0; i <= n; i++) {                 /* plot each segment separately */\r\n      t2 = t[i];                                /* sub-divide at t[i-1], t[i] */\r\n      fx1 = (t1*(t1*xb-2*xc)-t2*(t1*(t1*xa-2*xb)+xc)+xd)/8-fx0;\r\n      fy1 = (t1*(t1*yb-2*yc)-t2*(t1*(t1*ya-2*yb)+yc)+yd)/8-fy0;\r\n      fx2 = (t2*(t2*xb-2*xc)-t1*(t2*(t2*xa-2*xb)+xc)+xd)/8-fx0;\r\n      fy2 = (t2*(t2*yb-2*yc)-t1*(t2*(t2*ya-2*yb)+yc)+yd)/8-fy0;\r\n      fx0 -= fx3 = (t2*(t2*(3*xb-t2*xa)-3*xc)+xd)/8;\r\n      fy0 -= fy3 = (t2*(t2*(3*yb-t2*ya)-3*yc)+yd)/8;\r\n      x3 = Math.floor(fx3+0.5); y3 = Math.floor(fy3+0.5);     /* scale bounds */\r\n      if (fx0 != 0.0) { fx1 *= fx0 = (x0-x3)/fx0; fx2 *= fx0; }\r\n      if (fy0 != 0.0) { fy1 *= fy0 = (y0-y3)/fy0; fy2 *= fy0; }\r\n      if (x0 != x3 || y0 != y3)                            /* segment t1 - t2 */\r\n         plotCubicBezierSegWidth(x0,y0, x0+fx1,y0+fy1, x0+fx2,y0+fy2, x3,y3, th);\r\n      x0 = x3; y0 = y3; fx0 = fx3; fy0 = fy3; t1 = t2;\r\n   }\r\n}\r\n\r\nfunction plotCubicBezierSegWidth(x0,y0, x1,y1, x2,y2, x3,y3, th)\r\n{                     /* split cubic Bezier segment in two quadratic segments */\r\n   var x = Math.floor((x0+3*x1+3*x2+x3+4)/8), \r\n       y = Math.floor((y0+3*y1+3*y2+y3+4)/8);\r\n   plotQuadRationalBezierWidthSeg(x0,y0, \r\n      Math.floor((x0+3*x1+2)/4),Math.floor((y0+3*y1+2)/4), x,y, 1,th);\r\n   plotQuadRationalBezierWidthSeg(x,y, \r\n      Math.floor((3*x2+x3+2)/4),Math.floor((3*y2+y3+2)/4), x3,y3, 1,th);\r\n}\r\n\r\nexport default {\r\n  plotLine,\r\n  plotEllipse,\r\n  plotCircle,\r\n  plotEllipseRect,\r\n  plotQuadBezierSeg,\r\n  plotQuadBezier,\r\n  plotQuadRationalBezierSeg,\r\n  plotQuadRationalBezier,\r\n  plotRotatedEllipse,\r\n  plotRotatedEllipseRect,\r\n  plotCubicBezierSeg,\r\n  plotCubicBezier,\r\n  plotLineAA,\r\n  plotCircleAA,\r\n  plotEllipseRectAA,\r\n  plotQuadBezierSegAA,\r\n  plotQuadBezierAA,\r\n  plotQuadRationalBezierSegAA,\r\n  plotQuadRationalBezierAA,\r\n  plotRotatedEllipseAA,\r\n  plotRotatedEllipseRectAA,\r\n  plotCubicBezierSegAA,\r\n  plotCubicBezierAA,\r\n  plotLineWidth,\r\n  plotEllipseRectWidth,\r\n  plotQuadRationalBezierWidthSeg,\r\n  plotQuadRationalBezierWidth,\r\n  plotRotatedEllipseWidth,\r\n  plotRotatedEllipseRectWidth,\r\n  plotCubicBezierWidth,\r\n  plotCubicBezierSegWidth\r\n}\r\n","import bresenham from '@/bresenham.js'\n\nlet canvasContext, imageData, width, height\n\nconst zoom = 1\n\nwindow.setPixel = function (x, y) {\n  x *= zoom\n  y *= zoom\n  for (let xx = 0; xx < zoom; xx++) {\n    for (let yy = 0; yy < zoom; yy++) {\n      let subpixel = 4 * (x + xx + (y + yy) * width)\n      imageData.data[subpixel++] = 255\n      imageData.data[subpixel++] = 255\n      imageData.data[subpixel++] = 255\n      imageData.data[subpixel] = 255\n    }\n  }\n}\n\nwindow.setPixelAA = function (x, y, alpha) {\n  x *= zoom\n  y *= zoom\n  for (let xx = 0; xx < zoom; xx++) {\n    for (let yy = 0; yy < zoom; yy++) {\n      let subpixel = 4 * (x + xx + (y + yy) * width)\n      const value = Math.max(imageData.data[subpixel], 255 - alpha)\n      imageData.data[subpixel++] = value\n      imageData.data[subpixel++] = value\n      imageData.data[subpixel++] = value\n      imageData.data[subpixel] = 255\n    }\n  }\n}\n\nexport default {\n  init (canvasElement) {\n    canvasContext = canvasElement.getContext('2d')\n    width = canvasElement.width\n    height = canvasElement.height\n  },\n  begin () {\n    // Uint8ClampedArray\n    imageData = canvasContext.getImageData(0, 0, width, height)\n  },\n  clear () {\n    imageData.data.fill(0)\n  },\n  end () {\n    canvasContext.putImageData(imageData, 0, 0)\n  },\n  setPixel: window.setPixel,\n  setPixelAA: window.setPixelAA,\n  ...bresenham\n}\n","import framebuffer from '@/framebuffer.js'\n\nexport default {\n  drawNumber (number, x, y, size = 4, width = 1) {\n    /**\n     * Draw a number\n     * positive width  20 =  5 * size\n     * negative width  20 =  5 * size\n     * positive height 80 = 20 * size\n     * negative height 20 =  5 * size\n     * total width 40\n     * total height 100\n     * margins in size:\n     * top, left, right: 1\n     */\n    const left = x - size * 4\n    const right = x + size * 4\n    const top = y - size * 19\n    const bottom = y - size\n    switch (number) {\n      case 0:\n        // Elipsis\n        framebuffer.plotEllipseRectWidth(\n          left, top,\n          right, bottom,\n          width\n        )\n        // Center dot\n        framebuffer.plotEllipseRectWidth(\n          x - size, y - size * 11,\n          x + size, y - size * 9,\n          width\n        )\n        break\n      case 1:\n        // Diagonal\n        framebuffer.plotQuadRationalBezierWidth(\n          x, top,\n          x, y - size * 15,\n          x - size * 3, y - size * 15,\n          1,\n          width\n        )\n        // Vertical\n        framebuffer.plotLineWidth(\n          x, top,\n          x, bottom,\n          width\n        )\n        // Horizontal\n        framebuffer.plotLineWidth(\n          x - size * 3, bottom,\n          x + size * 3, bottom,\n          width\n        )\n        break\n      case 2:\n        // Top part, top right\n        framebuffer.plotQuadRationalBezierWidth(\n          right, y - size * 15,\n          right, top,\n          x, top,\n          1,\n          width\n        )\n        // Top part, top left\n        framebuffer.plotQuadRationalBezierWidth(\n          x, top,\n          left, top,\n          left, y - size * 15,\n          1,\n          width\n        )\n        // Top part, bottom right\n        framebuffer.plotQuadRationalBezierWidth(\n          x, y - size * 8,\n          right, y - size * 12,\n          right, y - size * 15,\n          1,\n          width\n        )\n        // Bottom part, bottom left\n        framebuffer.plotQuadRationalBezierWidth(\n          x, y - size * 8,\n          left, y - size * 4,\n          left, bottom,\n          1,\n          width\n        )\n        // Horizontal\n        framebuffer.plotLineWidth(\n          left, bottom,\n          right, bottom,\n          width\n        )\n        break\n      case 3:\n        // Bottom part, bottom left\n        framebuffer.plotQuadRationalBezierWidth(\n          left, y - size * 6,\n          left, bottom,\n          x, bottom,\n          1,\n          width\n        )\n        // Bottom part, bottom right\n        framebuffer.plotQuadRationalBezierWidth(\n          x, bottom,\n          right, bottom,\n          right, y - size * 6,\n          1,\n          width\n        )\n        // Bottom part, top right\n        framebuffer.plotQuadRationalBezierWidth(\n          right, y - size * 6,\n          right, y - size * 11,\n          x, y - size * 11,\n          1,\n          width\n        )\n        // Top part, bottom right\n        framebuffer.plotQuadRationalBezierWidth(\n          x, y - size * 11,\n          right, y - size * 11,\n          right, y - size * 15,\n          1,\n          width\n        )\n        // Top part, top right\n        framebuffer.plotQuadRationalBezierWidth(\n          right, y - size * 15,\n          right, top,\n          x, top,\n          1,\n          width\n        )\n        // Top part, top left\n        framebuffer.plotQuadRationalBezierWidth(\n          x, top,\n          left, top,\n          left, y - size * 15,\n          1,\n          width\n        )\n        break\n      case 4:\n        // Vertical\n        framebuffer.plotLineWidth(\n          x + size * 2, top,\n          x + size * 2, bottom,\n          width\n        )\n        // Diagonal\n        framebuffer.plotLineWidth(\n          x + size * 2, top,\n          left, y - size * 6,\n          width\n        )\n        // Horizontal\n        framebuffer.plotLineWidth(\n          left, y - size * 6,\n          right, y - size * 6,\n          width\n        )\n        break\n      case 5:\n        // Bottom left\n        framebuffer.plotQuadRationalBezierWidth(\n          left, y - size * 6,\n          left, bottom,\n          x, bottom,\n          1,\n          width\n        )\n        // Bottom right\n        framebuffer.plotQuadRationalBezierWidth(\n          x, bottom,\n          right, bottom,\n          right, y - size * 6,\n          1,\n          width\n        )\n        // Middle right\n        framebuffer.plotQuadRationalBezierWidth(\n          right, y - size * 6,\n          right, y - size * 12,\n          x, y - size * 12,\n          1,\n          width\n        )\n        // Middle left\n        framebuffer.plotQuadRationalBezierWidth(\n          x, y - size * 12,\n          x - size * 3, y - size * 12,\n          left, y - size * 10,\n          1,\n          width\n        )\n        // Vertical left\n        framebuffer.plotLineWidth(\n          left, top,\n          left, y - size * 10,\n          width\n        )\n        // Horizontal top\n        framebuffer.plotLineWidth(\n          left, top,\n          right, top,\n          width\n        )\n        break\n      case 6:\n        // Bottom left\n        framebuffer.plotQuadRationalBezierWidth(\n          left, y - size * 6,\n          left, bottom,\n          x, bottom,\n          1,\n          width\n        )\n        // Bottom right\n        framebuffer.plotQuadRationalBezierWidth(\n          x, bottom,\n          right, bottom,\n          right, y - size * 6,\n          1,\n          width\n        )\n        // Middle right\n        framebuffer.plotQuadRationalBezierWidth(\n          right, y - size * 6,\n          right, y - size * 12,\n          x, y - size * 12,\n          1,\n          width\n        )\n        // Middle left\n        framebuffer.plotQuadRationalBezierWidth(\n          x, y - size * 12,\n          left, y - size * 12,\n          left, y - size * 6,\n          1,\n          width\n        )\n        // Vertical left\n        framebuffer.plotLineWidth(\n          left, y - size * 15,\n          left, y - size * 6,\n          width\n        )\n        // Top left\n        framebuffer.plotQuadRationalBezierWidth(\n          x, top,\n          left, top,\n          left, y - size * 15,\n          1,\n          width\n        )\n        // Top right\n        framebuffer.plotQuadRationalBezierWidth(\n          right, y - size * 15,\n          right, top,\n          x, top,\n          1,\n          width\n        )\n        break\n      case 7:\n        // Horizontal top\n        framebuffer.plotLineWidth(\n          left, top,\n          right, top,\n          width\n        )\n        // Diagonal\n        framebuffer.plotQuadRationalBezierWidth(\n          right, top,\n          x, y - size * 10,\n          x - size * 2, bottom,\n          1,\n          width\n        )\n        break\n      case 8:\n        // Bottom part, bottom left\n        framebuffer.plotQuadRationalBezierWidth(\n          left, y - size * 6,\n          left, bottom,\n          x, bottom,\n          1,\n          width\n        )\n        // Bottom part, bottom right\n        framebuffer.plotQuadRationalBezierWidth(\n          x, bottom,\n          right, bottom,\n          right, y - size * 6,\n          1,\n          width\n        )\n        // Bottom part, top right\n        framebuffer.plotQuadRationalBezierWidth(\n          right, y - size * 6,\n          right, y - size * 11,\n          x, y - size * 11,\n          1,\n          width\n        )\n        // Bottom part, top left\n        framebuffer.plotQuadRationalBezierWidth(\n          x, y - size * 11,\n          left, y - size * 11,\n          left, y - size * 6,\n          1,\n          width\n        )\n        // Top part, bottom right\n        framebuffer.plotQuadRationalBezierWidth(\n          x, y - size * 11,\n          right, y - size * 11,\n          right, y - size * 15,\n          1,\n          width\n        )\n        // Top part, top right\n        framebuffer.plotQuadRationalBezierWidth(\n          right, y - size * 15,\n          right, top,\n          x, top,\n          1,\n          width\n        )\n        // Top part, top left\n        framebuffer.plotQuadRationalBezierWidth(\n          x, top,\n          left, top,\n          left, y - size * 15,\n          1,\n          width\n        )\n        // Top part, bottom left\n        framebuffer.plotQuadRationalBezierWidth(\n          left, y - size * 15,\n          left, y - size * 11,\n          x, y - size * 11,\n          1,\n          width\n        )\n        break\n      case 9:\n        // Bottom left\n        framebuffer.plotQuadRationalBezierWidth(\n          left, y - size * 5,\n          left, bottom,\n          x, bottom,\n          1,\n          width\n        )\n        // Bottom right\n        framebuffer.plotQuadRationalBezierWidth(\n          x, bottom,\n          right, bottom,\n          right, y - size * 5,\n          1,\n          width\n        )\n        // Vertical right\n        framebuffer.plotLineWidth(\n          right, y - size * 14,\n          right, y - size * 5,\n          width\n        )\n        // Top right\n        framebuffer.plotQuadRationalBezierWidth(\n          right, y - size * 14,\n          right, top,\n          x, top,\n          1,\n          width\n        )\n        // Top left\n        framebuffer.plotQuadRationalBezierWidth(\n          x, top,\n          left, top,\n          left, y - size * 14,\n          1,\n          width\n        )\n        // Middle left\n        framebuffer.plotQuadRationalBezierWidth(\n          left, y - size * 14,\n          left, y - size * 8,\n          x, y - size * 8,\n          1,\n          width\n        )\n        // Middle right\n        framebuffer.plotQuadRationalBezierWidth(\n          x, y - size * 8,\n          right, y - size * 8,\n          right, y - size * 14,\n          1,\n          width\n        )\n        break\n      default:\n        framebuffer.plotLine(left, bottom, right, bottom)\n        framebuffer.plotLine(x, y, x, top)\n    }\n  }\n}\n","import framebuffer from '@/framebuffer.js'\n\nexport default {\n  degreeCelcuis (x, y, size = 4, width = 1) {\n    /**\n     * Draw a °C\n     * positive width  20 =  5 * size\n     * negative width  20 =  5 * size\n     * positive height 80 = 20 * size\n     * negative height 20 =  5 * size\n     * total width 40\n     * total height 100\n     * margins in size:\n     * top, left, right: 1\n     */\n    const left = x - size * 4\n    const right = x + size * 4\n    const top = y - size * 19\n    const bottom = y - size\n    // Elipsis\n    framebuffer.plotEllipseRectWidth(\n      left, top,\n      right, bottom,\n      width\n    )\n    // Center dot\n    framebuffer.plotEllipseRectWidth(\n      x - size, y - size * 11,\n      x + size, y - size * 9,\n      width\n    )\n  },\n\n  kilometersPerHour (x, y, size = 4, width = 1) {\n    /**\n     * Draw a km/h\n     * positive width  20 =  5 * size\n     * negative width  20 =  5 * size\n     * positive height 80 = 20 * size\n     * negative height 20 =  5 * size\n     * total width 40\n     * total height 100\n     * margins in size:\n     * top, left, right: 1\n     */\n    const left = x - size * 4\n    // const right = x + size * 4\n    const top = y - size * 19\n    const bottom = y - size\n    // k\n    framebuffer.plotLineWidth(\n      left, top,\n      left, bottom,\n      width\n    )\n\n    framebuffer.plotLineWidth(\n      x - size * 3, y - size * 6,\n      x, y - size * 12,\n      width\n    )\n\n    framebuffer.plotLineWidth(\n      x - size * 3, y - size * 6,\n      x, bottom,\n      width\n    )\n    // m -- first vert\n    framebuffer.plotLineWidth(\n      x + size * 2, y - size * 12,\n      x + size * 2, bottom,\n      width\n    )\n\n    framebuffer.plotQuadRationalBezierWidth(\n      x + size * 2, y - size * 12,\n      x + size * 6, y - size * 12,\n      x + size * 6, y - size * 8,\n      1,\n      width\n    )\n\n    // m -- middle vert\n    framebuffer.plotLineWidth(\n      x + size * 6, y - size * 12,\n      x + size * 6, bottom,\n      width\n    )\n\n    framebuffer.plotQuadRationalBezierWidth(\n      x + size * 6, y - size * 12,\n      x + size * 10, y - size * 12,\n      x + size * 10, y - size * 8,\n      1,\n      width\n    )\n\n    // m -- last vert\n    framebuffer.plotLineWidth(\n      x + size * 10, y - size * 8,\n      x + size * 10, bottom,\n      width\n    )\n\n    // /\n    framebuffer.plotLineWidth(\n      x + size * 13, top,\n      x + size * 11, bottom,\n      width\n    )\n\n    // h\n    framebuffer.plotLineWidth(\n      x + size * 14, top,\n      x + size * 14, bottom,\n      width\n    )\n\n    framebuffer.plotQuadRationalBezierWidth(\n      x + size * 14, y - size * 12,\n      x + size * 18, y - size * 12,\n      x + size * 18, y - size * 8,\n      1,\n      width\n    )\n\n    framebuffer.plotLineWidth(\n      x + size * 18, y - size * 8,\n      x + size * 18, bottom,\n      width\n    )\n  }\n}\n","<template>\n  <canvas\n    ref=\"canvas\"\n    width=\"960\"\n    height=\"720\"\n  />\n</template>\n<script>\nimport framebuffer from '@/framebuffer.js'\nimport numbers from '@/numbers.js'\nimport units from '@/units.js'\n\nexport default {\n  name: 'Canvas',\n  mounted () {\n    framebuffer.init(this.$refs.canvas)\n    this.draw()\n  },\n  methods: {\n    clear () {\n      framebuffer.begin()\n      framebuffer.clear()\n      framebuffer.end()\n    },\n    draw () {\n      framebuffer.begin()\n\n      numbers.drawNumber(1, 20, 80)\n      numbers.drawNumber(2, 60, 80)\n      numbers.drawNumber(3, 100, 80)\n      units.kilometersPerHour(140, 80)\n\n      numbers.drawNumber(1, 20, 120, 2)\n      numbers.drawNumber(2, 40, 120, 2)\n      numbers.drawNumber(3, 60, 120, 2)\n      units.kilometersPerHour(80, 120, 2)\n\n      numbers.drawNumber(1, 20, 200)\n      numbers.drawNumber(2, 60, 200)\n      numbers.drawNumber(3, 100, 200)\n      units.kilometersPerHour(130, 150, 1)\n      numbers.drawNumber(5, 140, 200, 2)\n\n      framebuffer.end()\n    }\n  }\n}\n</script>\n<style type=\"text/css\">\ncanvas {\n  background-color: black;\n  border: solid 1px white;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Canvas.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Canvas.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Canvas.vue?vue&type=template&id=553c0a70&\"\nimport script from \"./Canvas.vue?vue&type=script&lang=js&\"\nexport * from \"./Canvas.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Canvas.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:{'wide-screen': _vm.isWideScreen}},[_vm._t(\"default\")],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div :class=\"{'wide-screen': isWideScreen}\">\n    <slot />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Screen',\n  props: {\n    isWideScreen: {\n      type: Boolean,\n      default: false\n    }\n  }\n}\n</script>\n<style>\n.wide-screen {\n  transform: scaleY(calc(9.0 / 12.0));\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Screen.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Screen.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Screen.vue?vue&type=template&id=a028dffc&\"\nimport script from \"./Screen.vue?vue&type=script&lang=js&\"\nexport * from \"./Screen.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Screen.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <Screen :is-wide-screen=\"isWideScreen\">\n      <Canvas />\n    </Screen>\n    <input\n      v-model=\"isWideScreen\"\n      type=\"checkbox\"\n      name=\"isWideScreen\"\n    ><label for=\"isWideScreen\">Wide screen</label>\n  </div>\n</template>\n\n<script>\nimport Canvas from './components/Canvas.vue'\nimport Screen from './components/Screen.vue'\nexport default {\n  name: 'App',\n  components: {\n    Canvas,\n    Screen\n  },\n  data: () => ({\n    isWideScreen: true\n  })\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  text-align: center;\n  background-color: dimgray;\n  display: flex;\n  flex-direction: column;\n}\nlabel {\n  display: inline-flex;\n  justify-content: center;\n  align-items: flex-end;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=221e19ce&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App)\n}).$mount('#app')\n"],"sourceRoot":""}